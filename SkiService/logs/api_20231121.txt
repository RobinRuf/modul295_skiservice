2023-11-21 18:06:33.821 +01:00 [INF] User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-11-21 18:06:34.033 +01:00 [INF] Now listening on: https://localhost:7214
2023-11-21 18:06:34.034 +01:00 [INF] Now listening on: http://localhost:5271
2023-11-21 18:06:34.035 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-11-21 18:06:34.035 +01:00 [INF] Hosting environment: Development
2023-11-21 18:06:34.035 +01:00 [INF] Content root path: C:\GitHub\Modul295\SkiServiceProject\SkiService
2023-11-21 18:06:34.766 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/swagger/index.html - -
2023-11-21 18:06:34.979 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - -
2023-11-21 18:06:34.983 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_vs/browserLink - -
2023-11-21 18:06:35.000 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/swagger/index.html - - - 200 - text/html;charset=utf-8 234.8603ms
2023-11-21 18:06:35.027 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - - - 200 12352 application/javascript;+charset=utf-8 48.6621ms
2023-11-21 18:06:35.042 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 60.5240ms
2023-11-21 18:06:35.081 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/swagger/v1/swagger.json - -
2023-11-21 18:06:35.202 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 121.6516ms
2023-11-21 18:06:43.103 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/api/Service - -
2023-11-21 18:06:43.260 +01:00 [INF] Executing endpoint 'SkiService.Controllers.ServiceController.GetServiceOrders (SkiService)'
2023-11-21 18:06:43.306 +01:00 [INF] Route matched with {action = "GetServiceOrders", controller = "Service"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[SkiService.Models.dto.GetServiceOrderDto]]] GetServiceOrders() on controller SkiService.Controllers.ServiceController (SkiService).
2023-11-21 18:06:43.729 +01:00 [INF] Executing action method SkiService.Controllers.ServiceController.GetServiceOrders (SkiService) - Validation state: "Valid"
2023-11-21 18:06:44.875 +01:00 [INF] Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT `s`.`OrderID`, COALESCE(`e`.`Name`, 'N/A') AS `EmployeeName`, `c`.`Name` AS `CustomerName`, `c`.`Email` AS `CustomerEmail`, `c`.`Phone` AS `CustomerPhone`, `s0`.`ServiceType`, `p`.`Priority`, `s1`.`Status`, `s`.`CreationDate`, `s`.`StartDate`, `s`.`CompletionDate`, COALESCE(`s`.`Comment`, 'Kein Kommentar') AS `Comment`, `s`.`Sum`
FROM `ServiceOrders` AS `s`
LEFT JOIN `Employees` AS `e` ON `s`.`EmployeeID` = `e`.`ID`
INNER JOIN `Customers` AS `c` ON `s`.`CustomerID` = `c`.`ID`
LEFT JOIN `Services` AS `s0` ON `s`.`ServiceType` = `s0`.`ID`
LEFT JOIN `Priorities` AS `p` ON `s`.`Priority` = `p`.`ID`
LEFT JOIN `Statuses` AS `s1` ON `s`.`Status` = `s1`.`ID`
2023-11-21 18:06:44.902 +01:00 [INF] Erfolgreich alle Auftr√§ge erhalten.
2023-11-21 18:06:44.910 +01:00 [INF] Executed action method SkiService.Controllers.ServiceController.GetServiceOrders (SkiService), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1173.4225ms.
2023-11-21 18:06:44.921 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[SkiService.Models.dto.GetServiceOrderDto, SkiService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-11-21 18:06:44.949 +01:00 [INF] Executed action SkiService.Controllers.ServiceController.GetServiceOrders (SkiService) in 1639.6671ms
2023-11-21 18:06:44.950 +01:00 [INF] Executed endpoint 'SkiService.Controllers.ServiceController.GetServiceOrders (SkiService)'
2023-11-21 18:06:44.957 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/api/Service - - - 200 - application/json;+charset=utf-8 1854.1199ms
2023-11-21 18:27:39.112 +01:00 [INF] User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-11-21 18:27:39.300 +01:00 [INF] Now listening on: https://localhost:7214
2023-11-21 18:27:39.300 +01:00 [INF] Now listening on: http://localhost:5271
2023-11-21 18:27:39.302 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-11-21 18:27:39.302 +01:00 [INF] Hosting environment: Development
2023-11-21 18:27:39.302 +01:00 [INF] Content root path: C:\GitHub\Modul295\SkiServiceProject\SkiService
2023-11-21 18:27:40.025 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/swagger/index.html - -
2023-11-21 18:27:40.231 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/swagger/index.html - - - 200 - text/html;charset=utf-8 206.8177ms
2023-11-21 18:27:40.236 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_vs/browserLink - -
2023-11-21 18:27:40.236 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - -
2023-11-21 18:27:40.265 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - - - 200 12352 application/javascript;+charset=utf-8 26.6221ms
2023-11-21 18:27:40.286 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 49.4735ms
2023-11-21 18:27:40.320 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/swagger/v1/swagger.json - -
2023-11-21 18:27:40.387 +01:00 [ERR] An unhandled exception has occurred while executing the request.
Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorException: Conflicting method/path combination "POST api/Auth/login" for actions - SkiService.Controllers.AuthController.Login (SkiService),SkiService.Controllers.AuthController.Login (SkiService). Actions require a unique method/path combination for Swagger/OpenAPI 3.0. Use ConflictingActionsResolver as a workaround
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GenerateOperations(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePaths(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerDocumentWithoutFilters(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerAsync(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-11-21 18:27:40.491 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/swagger/v1/swagger.json - - - 500 - text/plain;+charset=utf-8 171.5829ms
2023-11-21 18:27:45.582 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/swagger/index.html - -
2023-11-21 18:27:45.595 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/swagger/index.html - - - 200 - text/html;charset=utf-8 12.7436ms
2023-11-21 18:27:45.600 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - -
2023-11-21 18:27:45.600 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_vs/browserLink - -
2023-11-21 18:27:45.602 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - - - 200 12352 application/javascript;+charset=utf-8 1.9012ms
2023-11-21 18:27:45.628 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 28.1914ms
2023-11-21 18:27:45.655 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/swagger/v1/swagger.json - -
2023-11-21 18:27:45.657 +01:00 [ERR] An unhandled exception has occurred while executing the request.
Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorException: Conflicting method/path combination "POST api/Auth/login" for actions - SkiService.Controllers.AuthController.Login (SkiService),SkiService.Controllers.AuthController.Login (SkiService). Actions require a unique method/path combination for Swagger/OpenAPI 3.0. Use ConflictingActionsResolver as a workaround
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GenerateOperations(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePaths(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerDocumentWithoutFilters(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerAsync(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-11-21 18:27:45.659 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/swagger/v1/swagger.json - - - 500 - text/plain;+charset=utf-8 3.4733ms
2023-11-21 18:28:02.890 +01:00 [INF] User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-11-21 18:28:03.100 +01:00 [INF] Now listening on: https://localhost:7214
2023-11-21 18:28:03.101 +01:00 [INF] Now listening on: http://localhost:5271
2023-11-21 18:28:03.102 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-11-21 18:28:03.103 +01:00 [INF] Hosting environment: Development
2023-11-21 18:28:03.103 +01:00 [INF] Content root path: C:\GitHub\Modul295\SkiServiceProject\SkiService
2023-11-21 18:28:03.803 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/swagger/index.html - -
2023-11-21 18:28:04.033 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/swagger/index.html - - - 200 - text/html;charset=utf-8 232.2572ms
2023-11-21 18:28:04.052 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_vs/browserLink - -
2023-11-21 18:28:04.052 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - -
2023-11-21 18:28:04.077 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - - - 200 12352 application/javascript;+charset=utf-8 24.9009ms
2023-11-21 18:28:04.086 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 33.5404ms
2023-11-21 18:28:04.213 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/swagger/v1/swagger.json - -
2023-11-21 18:28:04.343 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 129.7403ms
2023-11-21 18:28:17.426 +01:00 [INF] User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-11-21 18:28:17.644 +01:00 [INF] Now listening on: https://localhost:7214
2023-11-21 18:28:17.644 +01:00 [INF] Now listening on: http://localhost:5271
2023-11-21 18:28:17.647 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-11-21 18:28:17.648 +01:00 [INF] Hosting environment: Development
2023-11-21 18:28:17.648 +01:00 [INF] Content root path: C:\GitHub\Modul295\SkiServiceProject\SkiService
2023-11-21 18:28:17.958 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/swagger/index.html - -
2023-11-21 18:28:18.153 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/swagger/index.html - - - 200 - text/html;charset=utf-8 197.1731ms
2023-11-21 18:28:18.162 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - -
2023-11-21 18:28:18.162 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_vs/browserLink - -
2023-11-21 18:28:18.179 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - - - 200 12352 application/javascript;+charset=utf-8 16.6721ms
2023-11-21 18:28:18.193 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 30.6333ms
2023-11-21 18:28:18.238 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/swagger/v1/swagger.json - -
2023-11-21 18:28:18.291 +01:00 [ERR] An unhandled exception has occurred while executing the request.
Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorException: Conflicting method/path combination "POST api/Auth/login" for actions - SkiService.Controllers.AuthController.Login (SkiService),SkiService.Controllers.AuthController.Login (SkiService). Actions require a unique method/path combination for Swagger/OpenAPI 3.0. Use ConflictingActionsResolver as a workaround
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GenerateOperations(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePaths(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerDocumentWithoutFilters(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerAsync(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-11-21 18:28:18.324 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/swagger/v1/swagger.json - - - 500 - text/plain;+charset=utf-8 85.8480ms
2023-11-21 18:30:04.965 +01:00 [INF] User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-11-21 18:30:05.166 +01:00 [INF] Now listening on: https://localhost:7214
2023-11-21 18:30:05.177 +01:00 [INF] Now listening on: http://localhost:5271
2023-11-21 18:30:05.179 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-11-21 18:30:05.180 +01:00 [INF] Hosting environment: Development
2023-11-21 18:30:05.180 +01:00 [INF] Content root path: C:\GitHub\Modul295\SkiServiceProject\SkiService
2023-11-21 18:30:05.671 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/swagger/index.html - -
2023-11-21 18:30:05.870 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/swagger/index.html - - - 200 - text/html;charset=utf-8 200.0071ms
2023-11-21 18:30:05.876 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - -
2023-11-21 18:30:05.876 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_vs/browserLink - -
2023-11-21 18:30:05.889 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - - - 200 12352 application/javascript;+charset=utf-8 13.0293ms
2023-11-21 18:30:05.901 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 25.1879ms
2023-11-21 18:30:05.936 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/swagger/v1/swagger.json - -
2023-11-21 18:30:06.045 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 109.3556ms
2023-11-21 18:30:20.941 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7214/api/Auth/login application/json 54
2023-11-21 18:30:20.967 +01:00 [INF] CORS policy execution successful.
2023-11-21 18:30:21.073 +01:00 [INF] Executing endpoint 'SkiService.Controllers.AuthController.Login (SkiService)'
2023-11-21 18:30:21.109 +01:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.String] Login(SkiService.Models.dto.LoginDto) on controller SkiService.Controllers.AuthController (SkiService).
2023-11-21 18:30:21.541 +01:00 [INF] Executing action method SkiService.Controllers.AuthController.Login (SkiService) - Validation state: "Valid"
2023-11-21 18:30:22.553 +01:00 [INF] Executed DbCommand (44ms) [Parameters=[@__loginDto_Username_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT `e`.`ID`, `e`.`IsLocked`, `e`.`LoginAttempts`, `e`.`Name`, `e`.`Password`, `e`.`Username`
FROM `Employees` AS `e`
WHERE `e`.`Username` = @__loginDto_Username_0
LIMIT 1
2023-11-21 18:30:22.744 +01:00 [ERR] Failed executing DbCommand (5ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET AUTOCOMMIT = 1;
UPDATE `Employees` SET `LoginAttempts` = @p0
WHERE `ID` = @p1;
SELECT ROW_COUNT();
2023-11-21 18:30:22.865 +01:00 [ERR] An exception occurred in the database while saving changes for context type 'SkiService.Models.SkiServiceContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> MySqlConnector.MySqlException (0x80004005): UPDATE command denied to user 'api'@'localhost' for table 'employees'
   at MySqlConnector.Core.ResultSet.ReadResultSetHeaderAsync(IOBehavior ioBehavior) in /_/src/MySqlConnector/Core/ResultSet.cs:line 43
   at MySqlConnector.MySqlDataReader.ActivateResultSet(CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlDataReader.cs:line 130
   at MySqlConnector.MySqlDataReader.CreateAsync(CommandListPosition commandListPosition, ICommandPayloadCreator payloadCreator, IDictionary`2 cachedProcedures, IMySqlCommand command, CommandBehavior behavior, Activity activity, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlDataReader.cs:line 468
   at MySqlConnector.Core.CommandExecutor.ExecuteReaderAsync(IReadOnlyList`1 commands, ICommandPayloadCreator payloadCreator, CommandBehavior behavior, Activity activity, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/Core/CommandExecutor.cs:line 56
   at MySqlConnector.MySqlCommand.ExecuteReaderAsync(CommandBehavior behavior, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlCommand.cs:line 344
   at MySqlConnector.MySqlCommand.ExecuteDbDataReader(CommandBehavior behavior) in /_/src/MySqlConnector/MySqlCommand.cs:line 278
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IList`1 entries)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.<>c.<SaveChanges>b__107_0(DbContext _, ValueTuple`2 t)
   at Pomelo.EntityFrameworkCore.MySql.Storage.Internal.MySqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> MySqlConnector.MySqlException (0x80004005): UPDATE command denied to user 'api'@'localhost' for table 'employees'
   at MySqlConnector.Core.ResultSet.ReadResultSetHeaderAsync(IOBehavior ioBehavior) in /_/src/MySqlConnector/Core/ResultSet.cs:line 43
   at MySqlConnector.MySqlDataReader.ActivateResultSet(CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlDataReader.cs:line 130
   at MySqlConnector.MySqlDataReader.CreateAsync(CommandListPosition commandListPosition, ICommandPayloadCreator payloadCreator, IDictionary`2 cachedProcedures, IMySqlCommand command, CommandBehavior behavior, Activity activity, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlDataReader.cs:line 468
   at MySqlConnector.Core.CommandExecutor.ExecuteReaderAsync(IReadOnlyList`1 commands, ICommandPayloadCreator payloadCreator, CommandBehavior behavior, Activity activity, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/Core/CommandExecutor.cs:line 56
   at MySqlConnector.MySqlCommand.ExecuteReaderAsync(CommandBehavior behavior, IOBehavior ioBehavior, CancellationToken cancellationToken) in /_/src/MySqlConnector/MySqlCommand.cs:line 344
   at MySqlConnector.MySqlCommand.ExecuteDbDataReader(CommandBehavior behavior) in /_/src/MySqlConnector/MySqlCommand.cs:line 278
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IList`1 entries)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.<>c.<SaveChanges>b__107_0(DbContext _, ValueTuple`2 t)
   at Pomelo.EntityFrameworkCore.MySql.Storage.Internal.MySqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)
2023-11-21 18:31:42.020 +01:00 [INF] User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-11-21 18:31:42.277 +01:00 [INF] Now listening on: https://localhost:7214
2023-11-21 18:31:42.277 +01:00 [INF] Now listening on: http://localhost:5271
2023-11-21 18:31:42.279 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-11-21 18:31:42.279 +01:00 [INF] Hosting environment: Development
2023-11-21 18:31:42.279 +01:00 [INF] Content root path: C:\GitHub\Modul295\SkiServiceProject\SkiService
2023-11-21 18:31:43.032 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/swagger/index.html - -
2023-11-21 18:31:43.296 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/swagger/index.html - - - 200 - text/html;charset=utf-8 265.8270ms
2023-11-21 18:31:43.303 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - -
2023-11-21 18:31:43.303 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_vs/browserLink - -
2023-11-21 18:31:43.309 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - - - 200 12352 application/javascript;+charset=utf-8 5.9881ms
2023-11-21 18:31:43.321 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 17.8493ms
2023-11-21 18:31:43.361 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/swagger/v1/swagger.json - -
2023-11-21 18:31:43.483 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 122.0334ms
2023-11-21 18:31:54.725 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7214/api/Auth/login application/json 54
2023-11-21 18:31:54.754 +01:00 [INF] CORS policy execution successful.
2023-11-21 18:31:54.871 +01:00 [INF] Executing endpoint 'SkiService.Controllers.AuthController.Login (SkiService)'
2023-11-21 18:31:54.904 +01:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.String] Login(SkiService.Models.dto.LoginDto) on controller SkiService.Controllers.AuthController (SkiService).
2023-11-21 18:31:55.291 +01:00 [INF] Executing action method SkiService.Controllers.AuthController.Login (SkiService) - Validation state: "Valid"
2023-11-21 18:31:56.332 +01:00 [INF] Executed DbCommand (54ms) [Parameters=[@__loginDto_Username_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT `e`.`ID`, `e`.`IsLocked`, `e`.`LoginAttempts`, `e`.`Name`, `e`.`Password`, `e`.`Username`
FROM `Employees` AS `e`
WHERE `e`.`Username` = @__loginDto_Username_0
LIMIT 1
2023-11-21 18:31:56.495 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET AUTOCOMMIT = 1;
UPDATE `Employees` SET `LoginAttempts` = @p0
WHERE `ID` = @p1;
SELECT ROW_COUNT();
2023-11-21 18:31:56.501 +01:00 [ERR] Falsches Passwort.
2023-11-21 18:31:56.506 +01:00 [INF] Executed action method SkiService.Controllers.AuthController.Login (SkiService), returned result Microsoft.AspNetCore.Mvc.UnauthorizedObjectResult in 1209.6199ms.
2023-11-21 18:31:56.514 +01:00 [INF] Executing UnauthorizedObjectResult, writing value of type 'System.String'.
2023-11-21 18:31:56.522 +01:00 [INF] Executed action SkiService.Controllers.AuthController.Login (SkiService) in 1612.7206ms
2023-11-21 18:31:56.522 +01:00 [INF] Executed endpoint 'SkiService.Controllers.AuthController.Login (SkiService)'
2023-11-21 18:31:56.535 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7214/api/Auth/login application/json 54 - 401 - text/plain;+charset=utf-8 1810.2105ms
2023-11-21 18:32:09.577 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7214/api/Auth/login application/json 54
2023-11-21 18:32:09.581 +01:00 [INF] CORS policy execution successful.
2023-11-21 18:32:09.583 +01:00 [INF] Executing endpoint 'SkiService.Controllers.AuthController.Login (SkiService)'
2023-11-21 18:32:09.583 +01:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.String] Login(SkiService.Models.dto.LoginDto) on controller SkiService.Controllers.AuthController (SkiService).
2023-11-21 18:32:09.616 +01:00 [INF] Executing action method SkiService.Controllers.AuthController.Login (SkiService) - Validation state: "Valid"
2023-11-21 18:32:09.633 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__loginDto_Username_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT `e`.`ID`, `e`.`IsLocked`, `e`.`LoginAttempts`, `e`.`Name`, `e`.`Password`, `e`.`Username`
FROM `Employees` AS `e`
WHERE `e`.`Username` = @__loginDto_Username_0
LIMIT 1
2023-11-21 18:32:09.640 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET AUTOCOMMIT = 1;
UPDATE `Employees` SET `LoginAttempts` = @p0
WHERE `ID` = @p1;
SELECT ROW_COUNT();
2023-11-21 18:32:09.640 +01:00 [ERR] Falsches Passwort.
2023-11-21 18:32:09.640 +01:00 [INF] Executed action method SkiService.Controllers.AuthController.Login (SkiService), returned result Microsoft.AspNetCore.Mvc.UnauthorizedObjectResult in 24.2236ms.
2023-11-21 18:32:09.641 +01:00 [INF] Executing UnauthorizedObjectResult, writing value of type 'System.String'.
2023-11-21 18:32:09.641 +01:00 [INF] Executed action SkiService.Controllers.AuthController.Login (SkiService) in 57.9384ms
2023-11-21 18:32:09.641 +01:00 [INF] Executed endpoint 'SkiService.Controllers.AuthController.Login (SkiService)'
2023-11-21 18:32:09.641 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7214/api/Auth/login application/json 54 - 401 - text/plain;+charset=utf-8 64.6063ms
2023-11-21 18:32:22.490 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7214/api/Auth/login application/json 54
2023-11-21 18:32:22.493 +01:00 [INF] CORS policy execution successful.
2023-11-21 18:32:22.497 +01:00 [INF] Executing endpoint 'SkiService.Controllers.AuthController.Login (SkiService)'
2023-11-21 18:32:22.497 +01:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.String] Login(SkiService.Models.dto.LoginDto) on controller SkiService.Controllers.AuthController (SkiService).
2023-11-21 18:32:22.516 +01:00 [INF] Executing action method SkiService.Controllers.AuthController.Login (SkiService) - Validation state: "Valid"
2023-11-21 18:32:22.581 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__loginDto_Username_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT `e`.`ID`, `e`.`IsLocked`, `e`.`LoginAttempts`, `e`.`Name`, `e`.`Password`, `e`.`Username`
FROM `Employees` AS `e`
WHERE `e`.`Username` = @__loginDto_Username_0
LIMIT 1
2023-11-21 18:32:22.581 +01:00 [ERR] Konto wurde gesperrt aufgrund zu vieler Fehlanmeldeversuche.
2023-11-21 18:32:22.584 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@p2='?' (DbType = Int32), @p0='?' (DbType = Boolean), @p1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET AUTOCOMMIT = 1;
UPDATE `Employees` SET `IsLocked` = @p0, `LoginAttempts` = @p1
WHERE `ID` = @p2;
SELECT ROW_COUNT();
2023-11-21 18:32:22.584 +01:00 [ERR] Falsches Passwort.
2023-11-21 18:32:22.584 +01:00 [INF] Executed action method SkiService.Controllers.AuthController.Login (SkiService), returned result Microsoft.AspNetCore.Mvc.UnauthorizedObjectResult in 68.0807ms.
2023-11-21 18:32:22.585 +01:00 [INF] Executing UnauthorizedObjectResult, writing value of type 'System.String'.
2023-11-21 18:32:22.585 +01:00 [INF] Executed action SkiService.Controllers.AuthController.Login (SkiService) in 87.7295ms
2023-11-21 18:32:22.585 +01:00 [INF] Executed endpoint 'SkiService.Controllers.AuthController.Login (SkiService)'
2023-11-21 18:32:22.585 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7214/api/Auth/login application/json 54 - 401 - text/plain;+charset=utf-8 95.2245ms
2023-11-21 18:32:39.832 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7214/api/Auth/login application/json 54
2023-11-21 18:32:39.832 +01:00 [INF] CORS policy execution successful.
2023-11-21 18:32:39.834 +01:00 [INF] Executing endpoint 'SkiService.Controllers.AuthController.Login (SkiService)'
2023-11-21 18:32:39.834 +01:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.String] Login(SkiService.Models.dto.LoginDto) on controller SkiService.Controllers.AuthController (SkiService).
2023-11-21 18:32:39.850 +01:00 [INF] Executing action method SkiService.Controllers.AuthController.Login (SkiService) - Validation state: "Valid"
2023-11-21 18:32:39.853 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__loginDto_Username_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT `e`.`ID`, `e`.`IsLocked`, `e`.`LoginAttempts`, `e`.`Name`, `e`.`Password`, `e`.`Username`
FROM `Employees` AS `e`
WHERE `e`.`Username` = @__loginDto_Username_0
LIMIT 1
2023-11-21 18:32:39.853 +01:00 [ERR] Konto gesperrt aufgrund zu vieler Fehlanmeldeversuche.
2023-11-21 18:32:39.853 +01:00 [INF] Executed action method SkiService.Controllers.AuthController.Login (SkiService), returned result Microsoft.AspNetCore.Mvc.UnauthorizedObjectResult in 3.3025ms.
2023-11-21 18:32:39.853 +01:00 [INF] Executing UnauthorizedObjectResult, writing value of type 'System.String'.
2023-11-21 18:32:39.853 +01:00 [INF] Executed action SkiService.Controllers.AuthController.Login (SkiService) in 19.5858ms
2023-11-21 18:32:39.853 +01:00 [INF] Executed endpoint 'SkiService.Controllers.AuthController.Login (SkiService)'
2023-11-21 18:32:39.854 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7214/api/Auth/login application/json 54 - 401 - text/plain;+charset=utf-8 21.6780ms
2023-11-21 18:32:48.096 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7214/api/Auth/login application/json 55
2023-11-21 18:32:48.096 +01:00 [INF] CORS policy execution successful.
2023-11-21 18:32:48.097 +01:00 [INF] Executing endpoint 'SkiService.Controllers.AuthController.Login (SkiService)'
2023-11-21 18:32:48.110 +01:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.String] Login(SkiService.Models.dto.LoginDto) on controller SkiService.Controllers.AuthController (SkiService).
2023-11-21 18:32:48.141 +01:00 [INF] Executing action method SkiService.Controllers.AuthController.Login (SkiService) - Validation state: "Valid"
2023-11-21 18:32:48.144 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__loginDto_Username_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT `e`.`ID`, `e`.`IsLocked`, `e`.`LoginAttempts`, `e`.`Name`, `e`.`Password`, `e`.`Username`
FROM `Employees` AS `e`
WHERE `e`.`Username` = @__loginDto_Username_0
LIMIT 1
2023-11-21 18:32:48.144 +01:00 [ERR] Benutzer wurde nicht gefunden. Ist er in der DB in der employees-Tabelle?
2023-11-21 18:32:48.145 +01:00 [INF] Executed action method SkiService.Controllers.AuthController.Login (SkiService), returned result Microsoft.AspNetCore.Mvc.UnauthorizedObjectResult in 3.0169ms.
2023-11-21 18:32:48.145 +01:00 [INF] Executing UnauthorizedObjectResult, writing value of type 'System.String'.
2023-11-21 18:32:48.145 +01:00 [INF] Executed action SkiService.Controllers.AuthController.Login (SkiService) in 34.7133ms
2023-11-21 18:32:48.145 +01:00 [INF] Executed endpoint 'SkiService.Controllers.AuthController.Login (SkiService)'
2023-11-21 18:32:48.145 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7214/api/Auth/login application/json 55 - 401 - text/plain;+charset=utf-8 50.2142ms
2023-11-21 18:33:25.903 +01:00 [INF] User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-11-21 18:33:26.175 +01:00 [INF] Now listening on: https://localhost:7214
2023-11-21 18:33:26.176 +01:00 [INF] Now listening on: http://localhost:5271
2023-11-21 18:33:26.178 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-11-21 18:33:26.187 +01:00 [INF] Hosting environment: Development
2023-11-21 18:33:26.187 +01:00 [INF] Content root path: C:\GitHub\Modul295\SkiServiceProject\SkiService
2023-11-21 18:33:26.574 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/swagger/index.html - -
2023-11-21 18:33:26.878 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/swagger/index.html - - - 200 - text/html;charset=utf-8 307.7961ms
2023-11-21 18:33:26.889 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - -
2023-11-21 18:33:26.889 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_vs/browserLink - -
2023-11-21 18:33:26.909 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - - - 200 12352 application/javascript;+charset=utf-8 19.7215ms
2023-11-21 18:33:26.927 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 37.9574ms
2023-11-21 18:33:27.016 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/swagger/v1/swagger.json - -
2023-11-21 18:33:27.135 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 119.3838ms
2023-11-21 18:33:44.317 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7214/api/Auth/login application/json 54
2023-11-21 18:33:44.349 +01:00 [INF] CORS policy execution successful.
2023-11-21 18:33:44.467 +01:00 [INF] Executing endpoint 'SkiService.Controllers.AuthController.Login (SkiService)'
2023-11-21 18:33:44.495 +01:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.String] Login(SkiService.Models.dto.LoginDto) on controller SkiService.Controllers.AuthController (SkiService).
2023-11-21 18:33:44.867 +01:00 [INF] Executing action method SkiService.Controllers.AuthController.Login (SkiService) - Validation state: "Valid"
2023-11-21 18:33:45.929 +01:00 [INF] Executed DbCommand (49ms) [Parameters=[@__loginDto_Username_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT `e`.`ID`, `e`.`IsLocked`, `e`.`LoginAttempts`, `e`.`Name`, `e`.`Password`, `e`.`Username`
FROM `Employees` AS `e`
WHERE `e`.`Username` = @__loginDto_Username_0
LIMIT 1
2023-11-21 18:33:46.080 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET AUTOCOMMIT = 1;
UPDATE `Employees` SET `LoginAttempts` = @p0
WHERE `ID` = @p1;
SELECT ROW_COUNT();
2023-11-21 18:33:46.086 +01:00 [ERR] Falsches Passwort.
2023-11-21 18:33:46.091 +01:00 [INF] Executed action method SkiService.Controllers.AuthController.Login (SkiService), returned result Microsoft.AspNetCore.Mvc.UnauthorizedObjectResult in 1217.3092ms.
2023-11-21 18:33:46.099 +01:00 [INF] Executing UnauthorizedObjectResult, writing value of type 'System.String'.
2023-11-21 18:33:46.103 +01:00 [INF] Executed action SkiService.Controllers.AuthController.Login (SkiService) in 1604.3135ms
2023-11-21 18:33:46.104 +01:00 [INF] Executed endpoint 'SkiService.Controllers.AuthController.Login (SkiService)'
2023-11-21 18:33:46.113 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7214/api/Auth/login application/json 54 - 401 - text/plain;+charset=utf-8 1796.3363ms
2023-11-21 18:33:58.322 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7214/api/Auth/login application/json 55
2023-11-21 18:33:58.324 +01:00 [INF] CORS policy execution successful.
2023-11-21 18:33:58.327 +01:00 [INF] Executing endpoint 'SkiService.Controllers.AuthController.Login (SkiService)'
2023-11-21 18:33:58.329 +01:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.String] Login(SkiService.Models.dto.LoginDto) on controller SkiService.Controllers.AuthController (SkiService).
2023-11-21 18:33:58.360 +01:00 [INF] Executing action method SkiService.Controllers.AuthController.Login (SkiService) - Validation state: "Valid"
2023-11-21 18:33:58.378 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__loginDto_Username_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT `e`.`ID`, `e`.`IsLocked`, `e`.`LoginAttempts`, `e`.`Name`, `e`.`Password`, `e`.`Username`
FROM `Employees` AS `e`
WHERE `e`.`Username` = @__loginDto_Username_0
LIMIT 1
2023-11-21 18:33:58.384 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET AUTOCOMMIT = 1;
UPDATE `Employees` SET `LoginAttempts` = @p0
WHERE `ID` = @p1;
SELECT ROW_COUNT();
2023-11-21 18:33:58.451 +01:00 [INF] Executed action method SkiService.Controllers.AuthController.Login (SkiService), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 90.8204ms.
2023-11-21 18:33:58.452 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2023-11-21 18:33:58.452 +01:00 [INF] Executed action SkiService.Controllers.AuthController.Login (SkiService) in 123.2035ms
2023-11-21 18:33:58.452 +01:00 [INF] Executed endpoint 'SkiService.Controllers.AuthController.Login (SkiService)'
2023-11-21 18:33:58.453 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7214/api/Auth/login application/json 55 - 200 - text/plain;+charset=utf-8 131.3656ms
2023-11-21 18:44:31.476 +01:00 [INF] User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-11-21 18:44:31.685 +01:00 [INF] Now listening on: https://localhost:7214
2023-11-21 18:44:31.685 +01:00 [INF] Now listening on: http://localhost:5271
2023-11-21 18:44:31.688 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-11-21 18:44:31.688 +01:00 [INF] Hosting environment: Development
2023-11-21 18:44:31.689 +01:00 [INF] Content root path: C:\GitHub\Modul295\SkiServiceProject\SkiService
2023-11-21 18:44:32.144 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/swagger/index.html - -
2023-11-21 18:44:32.365 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_vs/browserLink - -
2023-11-21 18:44:32.365 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - -
2023-11-21 18:44:32.404 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/swagger/index.html - - - 200 - text/html;charset=utf-8 255.6392ms
2023-11-21 18:44:32.404 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - - - 200 12352 application/javascript;+charset=utf-8 36.8220ms
2023-11-21 18:44:32.417 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 51.7889ms
2023-11-21 18:44:32.455 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/swagger/v1/swagger.json - -
2023-11-21 18:44:32.587 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 131.6101ms
2023-11-21 18:56:00.630 +01:00 [INF] User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-11-21 18:56:00.835 +01:00 [INF] Now listening on: https://localhost:7214
2023-11-21 18:56:00.835 +01:00 [INF] Now listening on: http://localhost:5271
2023-11-21 18:56:00.837 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-11-21 18:56:00.838 +01:00 [INF] Hosting environment: Development
2023-11-21 18:56:00.838 +01:00 [INF] Content root path: C:\GitHub\Modul295\SkiServiceProject\SkiService
2023-11-21 18:56:01.265 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/swagger/index.html - -
2023-11-21 18:56:01.485 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - -
2023-11-21 18:56:01.485 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_vs/browserLink - -
2023-11-21 18:56:01.486 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/swagger/index.html - - - 200 - text/html;charset=utf-8 222.2082ms
2023-11-21 18:56:01.504 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - - - 200 12352 application/javascript;+charset=utf-8 18.1751ms
2023-11-21 18:56:01.520 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 35.0293ms
2023-11-21 18:56:01.643 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/swagger/v1/swagger.json - -
2023-11-21 18:56:01.794 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 150.9549ms
2023-11-21 18:56:49.897 +01:00 [INF] User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-11-21 18:56:50.097 +01:00 [INF] Now listening on: https://localhost:7214
2023-11-21 18:56:50.098 +01:00 [INF] Now listening on: http://localhost:5271
2023-11-21 18:56:50.102 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-11-21 18:56:50.102 +01:00 [INF] Hosting environment: Development
2023-11-21 18:56:50.102 +01:00 [INF] Content root path: C:\GitHub\Modul295\SkiServiceProject\SkiService
2023-11-21 18:56:50.645 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/swagger/index.html - -
2023-11-21 18:56:50.820 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/swagger/index.html - - - 200 - text/html;charset=utf-8 175.0643ms
2023-11-21 18:56:50.828 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_vs/browserLink - -
2023-11-21 18:56:50.828 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - -
2023-11-21 18:56:50.847 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - - - 200 12352 application/javascript;+charset=utf-8 19.8287ms
2023-11-21 18:56:50.861 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 33.0380ms
2023-11-21 18:56:50.940 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/swagger/v1/swagger.json - -
2023-11-21 18:56:51.045 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 105.0516ms
2023-11-21 18:56:55.955 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/form.html - -
2023-11-21 18:56:56.013 +01:00 [INF] Sending file. Request path: '/form.html'. Physical path: 'C:\GitHub\Modul295\SkiServiceProject\SkiService\wwwroot\form.html'
2023-11-21 18:56:56.029 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/form.html - - - 200 - text/html 74.0855ms
2023-11-21 18:56:56.033 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/js/form.js - -
2023-11-21 18:56:56.033 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/js/calendar.js - -
2023-11-21 18:56:56.034 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/api/requestService.js - -
2023-11-21 18:56:56.034 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - -
2023-11-21 18:56:56.035 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_vs/browserLink - -
2023-11-21 18:56:56.038 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - - - 200 12352 application/javascript;+charset=utf-8 2.2886ms
2023-11-21 18:56:56.046 +01:00 [INF] Sending file. Request path: '/api/requestService.js'. Physical path: 'C:\GitHub\Modul295\SkiServiceProject\SkiService\wwwroot\api\requestService.js'
2023-11-21 18:56:56.047 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/api/requestService.js - - - 200 2366 text/javascript 11.6799ms
2023-11-21 18:56:56.063 +01:00 [INF] Sending file. Request path: '/js/form.js'. Physical path: 'C:\GitHub\Modul295\SkiServiceProject\SkiService\wwwroot\js\form.js'
2023-11-21 18:56:56.063 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/js/form.js - - - 200 7472 text/javascript 30.6453ms
2023-11-21 18:56:56.074 +01:00 [INF] Sending file. Request path: '/js/calendar.js'. Physical path: 'C:\GitHub\Modul295\SkiServiceProject\SkiService\wwwroot\js\calendar.js'
2023-11-21 18:56:56.075 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/js/calendar.js - - - 200 140142 text/javascript 41.1535ms
2023-11-21 18:56:56.079 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 43.5171ms
2023-11-21 19:13:48.080 +01:00 [INF] User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-11-21 19:13:48.276 +01:00 [INF] Now listening on: https://localhost:7214
2023-11-21 19:13:48.277 +01:00 [INF] Now listening on: http://localhost:5271
2023-11-21 19:13:48.280 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-11-21 19:13:48.280 +01:00 [INF] Hosting environment: Development
2023-11-21 19:13:48.280 +01:00 [INF] Content root path: C:\GitHub\Modul295\SkiServiceProject\SkiService
2023-11-21 19:13:48.807 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/swagger/index.html - -
2023-11-21 19:13:49.026 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - -
2023-11-21 19:13:49.026 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_vs/browserLink - -
2023-11-21 19:13:49.044 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/swagger/index.html - - - 200 - text/html;charset=utf-8 236.8998ms
2023-11-21 19:13:49.057 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - - - 200 12352 application/javascript;+charset=utf-8 30.9177ms
2023-11-21 19:13:49.076 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 50.0499ms
2023-11-21 19:13:49.119 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/swagger/v1/swagger.json - -
2023-11-21 19:13:49.223 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 103.7554ms
2023-11-21 19:13:54.091 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_vs/browserLink - -
2023-11-21 19:13:54.091 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - -
2023-11-21 19:13:54.096 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - - - 200 12352 application/javascript;+charset=utf-8 5.2559ms
2023-11-21 19:13:54.125 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 33.9791ms
2023-11-21 19:13:54.678 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - -
2023-11-21 19:13:54.679 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_vs/browserLink - -
2023-11-21 19:13:54.680 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - - - 200 12352 application/javascript;+charset=utf-8 1.5570ms
2023-11-21 19:13:54.694 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/orders.html?username=employee1 - -
2023-11-21 19:13:54.709 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 29.0438ms
2023-11-21 19:13:54.759 +01:00 [INF] Sending file. Request path: '/orders.html'. Physical path: 'C:\GitHub\Modul295\SkiServiceProject\SkiService\wwwroot\orders.html'
2023-11-21 19:13:54.765 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/orders.html?username=employee1 - - - 200 - text/html 70.8564ms
2023-11-21 19:13:54.820 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - -
2023-11-21 19:13:54.820 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/api/deleteOrder.js - -
2023-11-21 19:13:54.820 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/api/fetchOrders.js - -
2023-11-21 19:13:54.820 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/api/updateState.js - -
2023-11-21 19:13:54.821 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_vs/browserLink - -
2023-11-21 19:13:54.821 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - - - 200 12352 application/javascript;+charset=utf-8 1.3410ms
2023-11-21 19:13:54.822 +01:00 [INF] The file /api/deleteOrder.js was not modified
2023-11-21 19:13:54.823 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/api/deleteOrder.js - - - 304 - text/javascript 2.9111ms
2023-11-21 19:13:54.823 +01:00 [INF] The file /api/fetchOrders.js was not modified
2023-11-21 19:13:54.824 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/api/fetchOrders.js - - - 304 - text/javascript 3.6090ms
2023-11-21 19:13:54.848 +01:00 [INF] Sending file. Request path: '/api/updateState.js'. Physical path: 'C:\GitHub\Modul295\SkiServiceProject\SkiService\wwwroot\api\updateState.js'
2023-11-21 19:13:54.849 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/api/updateState.js - - - 200 1235 text/javascript 29.5202ms
2023-11-21 19:13:54.858 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/api/service application/json -
2023-11-21 19:13:54.862 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 41.7866ms
2023-11-21 19:13:55.012 +01:00 [INF] Executing endpoint 'SkiService.Controllers.ServiceController.GetServiceOrders (SkiService)'
2023-11-21 19:13:55.036 +01:00 [INF] Route matched with {action = "GetServiceOrders", controller = "Service"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[SkiService.Models.dto.GetServiceOrderDto]]] GetServiceOrders() on controller SkiService.Controllers.ServiceController (SkiService).
2023-11-21 19:13:55.421 +01:00 [INF] Executing action method SkiService.Controllers.ServiceController.GetServiceOrders (SkiService) - Validation state: "Valid"
2023-11-21 19:13:56.466 +01:00 [INF] Executed DbCommand (26ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT `s`.`OrderID`, COALESCE(`e`.`Name`, 'N/A') AS `EmployeeName`, `c`.`Name` AS `CustomerName`, `c`.`Email` AS `CustomerEmail`, `c`.`Phone` AS `CustomerPhone`, `s0`.`ServiceType`, `p`.`Priority`, `s1`.`Status`, `s`.`CreationDate`, `s`.`StartDate`, `s`.`CompletionDate`, COALESCE(`s`.`Comment`, 'Kein Kommentar') AS `Comment`, `s`.`Sum`
FROM `ServiceOrders` AS `s`
LEFT JOIN `Employees` AS `e` ON `s`.`EmployeeID` = `e`.`ID`
INNER JOIN `Customers` AS `c` ON `s`.`CustomerID` = `c`.`ID`
LEFT JOIN `Services` AS `s0` ON `s`.`ServiceType` = `s0`.`ID`
LEFT JOIN `Priorities` AS `p` ON `s`.`Priority` = `p`.`ID`
LEFT JOIN `Statuses` AS `s1` ON `s`.`Status` = `s1`.`ID`
2023-11-21 19:13:56.489 +01:00 [INF] Erfolgreich alle Auftr√§ge erhalten.
2023-11-21 19:13:56.494 +01:00 [INF] Executed action method SkiService.Controllers.ServiceController.GetServiceOrders (SkiService), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1068.0748ms.
2023-11-21 19:13:56.499 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[SkiService.Models.dto.GetServiceOrderDto, SkiService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-11-21 19:13:56.522 +01:00 [INF] Executed action SkiService.Controllers.ServiceController.GetServiceOrders (SkiService) in 1481.7427ms
2023-11-21 19:13:56.523 +01:00 [INF] Executed endpoint 'SkiService.Controllers.ServiceController.GetServiceOrders (SkiService)'
2023-11-21 19:13:56.530 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/api/service application/json - - 200 - application/json;+charset=utf-8 1672.0447ms
2023-11-21 19:14:03.748 +01:00 [INF] Request starting HTTP/2 PATCH https://localhost:7214/api/service/assign/5 application/json 24
2023-11-21 19:14:03.755 +01:00 [INF] CORS policy execution successful.
2023-11-21 19:14:03.853 +01:00 [INF] Request finished HTTP/2 PATCH https://localhost:7214/api/service/assign/5 application/json 24 - 404 0 - 104.6947ms
2023-11-21 19:14:07.935 +01:00 [INF] Request starting HTTP/2 PATCH https://localhost:7214/api/service/assign/5 application/json 24
2023-11-21 19:14:07.937 +01:00 [INF] CORS policy execution successful.
2023-11-21 19:14:07.940 +01:00 [INF] Request finished HTTP/2 PATCH https://localhost:7214/api/service/assign/5 application/json 24 - 404 0 - 4.7697ms
2023-11-21 19:14:47.175 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/orders.html?username=employee1 - -
2023-11-21 19:14:47.197 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/orders.html?username=employee1 - -
2023-11-21 19:14:47.197 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/orders.html?username=employee1 - -
2023-11-21 19:14:47.200 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/orders.html?username=employee1 - -
2023-11-21 19:14:47.243 +01:00 [INF] Sending file. Request path: '/orders.html'. Physical path: 'C:\GitHub\Modul295\SkiServiceProject\SkiService\wwwroot\orders.html'
2023-11-21 19:14:47.243 +01:00 [INF] Sending file. Request path: '/orders.html'. Physical path: 'C:\GitHub\Modul295\SkiServiceProject\SkiService\wwwroot\orders.html'
2023-11-21 19:14:47.243 +01:00 [INF] Sending file. Request path: '/orders.html'. Physical path: 'C:\GitHub\Modul295\SkiServiceProject\SkiService\wwwroot\orders.html'
2023-11-21 19:14:47.246 +01:00 [WRN] Unable to configure browser refresh script injection on the response. Consider manually adding '<script src="/_framework/aspnetcore-browser-refresh.js"></script>' to the body of the page.
2023-11-21 19:14:47.246 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/orders.html?username=employee1 - - - 200 - text/html 48.7861ms
2023-11-21 19:14:47.256 +01:00 [WRN] Unable to configure browser refresh script injection on the response. Consider manually adding '<script src="/_framework/aspnetcore-browser-refresh.js"></script>' to the body of the page.
2023-11-21 19:14:47.256 +01:00 [WRN] Unable to configure browser refresh script injection on the response. Consider manually adding '<script src="/_framework/aspnetcore-browser-refresh.js"></script>' to the body of the page.
2023-11-21 19:14:47.259 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/orders.html?username=employee1 - - - 200 - text/html 59.5193ms
2023-11-21 19:14:47.264 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/orders.html?username=employee1 - - - 200 - text/html 83.6988ms
2023-11-21 19:14:47.266 +01:00 [INF] Sending file. Request path: '/orders.html'. Physical path: 'C:\GitHub\Modul295\SkiServiceProject\SkiService\wwwroot\orders.html'
2023-11-21 19:14:47.271 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/orders.html?username=employee1 - - - 200 - text/html 73.4704ms
2023-11-21 19:14:47.276 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - -
2023-11-21 19:14:47.276 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_vs/browserLink - -
2023-11-21 19:14:47.278 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - - - 200 12352 application/javascript;+charset=utf-8 1.6623ms
2023-11-21 19:14:47.288 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/api/service application/json -
2023-11-21 19:14:47.291 +01:00 [INF] Executing endpoint 'SkiService.Controllers.ServiceController.GetServiceOrders (SkiService)'
2023-11-21 19:14:47.293 +01:00 [INF] Route matched with {action = "GetServiceOrders", controller = "Service"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[SkiService.Models.dto.GetServiceOrderDto]]] GetServiceOrders() on controller SkiService.Controllers.ServiceController (SkiService).
2023-11-21 19:14:47.294 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 17.7235ms
2023-11-21 19:14:47.328 +01:00 [INF] Executing action method SkiService.Controllers.ServiceController.GetServiceOrders (SkiService) - Validation state: "Valid"
2023-11-21 19:14:47.369 +01:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT `s`.`OrderID`, COALESCE(`e`.`Name`, 'N/A') AS `EmployeeName`, `c`.`Name` AS `CustomerName`, `c`.`Email` AS `CustomerEmail`, `c`.`Phone` AS `CustomerPhone`, `s0`.`ServiceType`, `p`.`Priority`, `s1`.`Status`, `s`.`CreationDate`, `s`.`StartDate`, `s`.`CompletionDate`, COALESCE(`s`.`Comment`, 'Kein Kommentar') AS `Comment`, `s`.`Sum`
FROM `ServiceOrders` AS `s`
LEFT JOIN `Employees` AS `e` ON `s`.`EmployeeID` = `e`.`ID`
INNER JOIN `Customers` AS `c` ON `s`.`CustomerID` = `c`.`ID`
LEFT JOIN `Services` AS `s0` ON `s`.`ServiceType` = `s0`.`ID`
LEFT JOIN `Priorities` AS `p` ON `s`.`Priority` = `p`.`ID`
LEFT JOIN `Statuses` AS `s1` ON `s`.`Status` = `s1`.`ID`
2023-11-21 19:14:47.371 +01:00 [INF] Erfolgreich alle Auftr√§ge erhalten.
2023-11-21 19:14:47.371 +01:00 [INF] Executed action method SkiService.Controllers.ServiceController.GetServiceOrders (SkiService), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 43.1542ms.
2023-11-21 19:14:47.372 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[SkiService.Models.dto.GetServiceOrderDto, SkiService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-11-21 19:14:47.372 +01:00 [INF] Executed action SkiService.Controllers.ServiceController.GetServiceOrders (SkiService) in 78.9707ms
2023-11-21 19:14:47.372 +01:00 [INF] Executed endpoint 'SkiService.Controllers.ServiceController.GetServiceOrders (SkiService)'
2023-11-21 19:14:47.373 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/api/service application/json - - 200 - application/json;+charset=utf-8 84.7000ms
2023-11-21 19:15:40.052 +01:00 [INF] Request starting HTTP/2 PATCH https://localhost:7214/api/service/assign/5 application/json 24
2023-11-21 19:15:40.053 +01:00 [INF] CORS policy execution successful.
2023-11-21 19:15:40.054 +01:00 [INF] Request finished HTTP/2 PATCH https://localhost:7214/api/service/assign/5 application/json 24 - 404 0 - 2.3334ms
2023-11-21 19:17:24.521 +01:00 [INF] User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-11-21 19:17:24.732 +01:00 [INF] Now listening on: https://localhost:7214
2023-11-21 19:17:24.733 +01:00 [INF] Now listening on: http://localhost:5271
2023-11-21 19:17:24.735 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-11-21 19:17:24.735 +01:00 [INF] Hosting environment: Development
2023-11-21 19:17:24.735 +01:00 [INF] Content root path: C:\GitHub\Modul295\SkiServiceProject\SkiService
2023-11-21 19:17:25.366 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/swagger/index.html - -
2023-11-21 19:17:25.542 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/swagger/index.html - - - 200 - text/html;charset=utf-8 178.3777ms
2023-11-21 19:17:25.554 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - -
2023-11-21 19:17:25.554 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_vs/browserLink - -
2023-11-21 19:17:25.602 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - - - 200 12352 application/javascript;+charset=utf-8 48.4172ms
2023-11-21 19:17:25.612 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 58.2128ms
2023-11-21 19:17:25.659 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/swagger/v1/swagger.json - -
2023-11-21 19:17:25.824 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 165.0356ms
2023-11-21 19:17:31.107 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - -
2023-11-21 19:17:31.107 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_vs/browserLink - -
2023-11-21 19:17:31.109 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - - - 200 12352 application/javascript;+charset=utf-8 2.3542ms
2023-11-21 19:17:31.141 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 34.4180ms
2023-11-21 19:17:31.256 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_vs/browserLink - -
2023-11-21 19:17:31.256 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - -
2023-11-21 19:17:31.257 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - - - 200 12352 application/javascript;+charset=utf-8 2.0165ms
2023-11-21 19:17:31.266 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/api/service application/json -
2023-11-21 19:17:31.286 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 29.7403ms
2023-11-21 19:17:31.404 +01:00 [INF] Executing endpoint 'SkiService.Controllers.ServiceController.GetServiceOrders (SkiService)'
2023-11-21 19:17:31.432 +01:00 [INF] Route matched with {action = "GetServiceOrders", controller = "Service"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[SkiService.Models.dto.GetServiceOrderDto]]] GetServiceOrders() on controller SkiService.Controllers.ServiceController (SkiService).
2023-11-21 19:17:31.746 +01:00 [INF] Executing action method SkiService.Controllers.ServiceController.GetServiceOrders (SkiService) - Validation state: "Valid"
2023-11-21 19:17:32.699 +01:00 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT `s`.`OrderID`, COALESCE(`e`.`Name`, 'N/A') AS `EmployeeName`, `c`.`Name` AS `CustomerName`, `c`.`Email` AS `CustomerEmail`, `c`.`Phone` AS `CustomerPhone`, `s0`.`ServiceType`, `p`.`Priority`, `s1`.`Status`, `s`.`CreationDate`, `s`.`StartDate`, `s`.`CompletionDate`, COALESCE(`s`.`Comment`, 'Kein Kommentar') AS `Comment`, `s`.`Sum`
FROM `ServiceOrders` AS `s`
LEFT JOIN `Employees` AS `e` ON `s`.`EmployeeID` = `e`.`ID`
INNER JOIN `Customers` AS `c` ON `s`.`CustomerID` = `c`.`ID`
LEFT JOIN `Services` AS `s0` ON `s`.`ServiceType` = `s0`.`ID`
LEFT JOIN `Priorities` AS `p` ON `s`.`Priority` = `p`.`ID`
LEFT JOIN `Statuses` AS `s1` ON `s`.`Status` = `s1`.`ID`
2023-11-21 19:17:32.722 +01:00 [INF] Erfolgreich alle Auftr√§ge erhalten.
2023-11-21 19:17:32.727 +01:00 [INF] Executed action method SkiService.Controllers.ServiceController.GetServiceOrders (SkiService), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 975.8281ms.
2023-11-21 19:17:32.733 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[SkiService.Models.dto.GetServiceOrderDto, SkiService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-11-21 19:17:32.747 +01:00 [INF] Executed action SkiService.Controllers.ServiceController.GetServiceOrders (SkiService) in 1310.4828ms
2023-11-21 19:17:32.747 +01:00 [INF] Executed endpoint 'SkiService.Controllers.ServiceController.GetServiceOrders (SkiService)'
2023-11-21 19:17:32.755 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/api/service application/json - - 200 - application/json;+charset=utf-8 1488.7997ms
2023-11-21 19:17:35.717 +01:00 [INF] Request starting HTTP/2 PATCH https://localhost:7214/api/service/assign/5 application/json 24
2023-11-21 19:17:35.722 +01:00 [INF] CORS policy execution successful.
2023-11-21 19:17:35.797 +01:00 [INF] Executing endpoint 'SkiService.Controllers.ServiceController.AssignOrderToEmployee (SkiService)'
2023-11-21 19:17:35.812 +01:00 [INF] Route matched with {action = "AssignOrderToEmployee", controller = "Service"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignOrderToEmployee(Int32, SkiService.Models.dto.AssignOrderDto) on controller SkiService.Controllers.ServiceController (SkiService).
2023-11-21 19:17:35.872 +01:00 [INF] Executing action method SkiService.Controllers.ServiceController.AssignOrderToEmployee (SkiService) - Validation state: "Valid"
2023-11-21 19:17:35.967 +01:00 [INF] Executed DbCommand (33ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `s`.`OrderID`, `s`.`Comment`, `s`.`CompletionDate`, `s`.`CreationDate`, `s`.`CustomerID`, `s`.`EmployeeID`, `s`.`Priority`, `s`.`ServiceType`, `s`.`StartDate`, `s`.`Status`, `s`.`Sum`
FROM `ServiceOrders` AS `s`
WHERE `s`.`OrderID` = @__p_0
LIMIT 1
2023-11-21 19:17:36.059 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__assignOrderDto_Username_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT `e`.`ID`, `e`.`IsLocked`, `e`.`LoginAttempts`, `e`.`Name`, `e`.`Password`, `e`.`Username`
FROM `Employees` AS `e`
WHERE `e`.`Username` = @__assignOrderDto_Username_0
LIMIT 1
2023-11-21 19:17:36.199 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@p10='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime), @p2='?' (DbType = DateTime), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = DateTime), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET AUTOCOMMIT = 1;
UPDATE `ServiceOrders` SET `Comment` = @p0, `CompletionDate` = @p1, `CreationDate` = @p2, `CustomerID` = @p3, `EmployeeID` = @p4, `Priority` = @p5, `ServiceType` = @p6, `StartDate` = @p7, `Status` = @p8, `Sum` = @p9
WHERE `OrderID` = @p10;
SELECT ROW_COUNT();
2023-11-21 19:17:36.205 +01:00 [INF] Erfolgreich den Mitarbeiter Max Mustermann dem Auftrag 5 zugewiesen.
2023-11-21 19:17:36.206 +01:00 [INF] Executed action method SkiService.Controllers.ServiceController.AssignOrderToEmployee (SkiService), returned result Microsoft.AspNetCore.Mvc.OkResult in 333.5793ms.
2023-11-21 19:17:36.208 +01:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2023-11-21 19:17:36.208 +01:00 [INF] Executed action SkiService.Controllers.ServiceController.AssignOrderToEmployee (SkiService) in 395.3585ms
2023-11-21 19:17:36.208 +01:00 [INF] Executed endpoint 'SkiService.Controllers.ServiceController.AssignOrderToEmployee (SkiService)'
2023-11-21 19:17:36.208 +01:00 [INF] Request finished HTTP/2 PATCH https://localhost:7214/api/service/assign/5 application/json 24 - 200 0 - 491.4653ms
2023-11-21 19:17:38.080 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/api/service application/json -
2023-11-21 19:17:38.085 +01:00 [INF] Executing endpoint 'SkiService.Controllers.ServiceController.GetServiceOrders (SkiService)'
2023-11-21 19:17:38.085 +01:00 [INF] Route matched with {action = "GetServiceOrders", controller = "Service"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[SkiService.Models.dto.GetServiceOrderDto]]] GetServiceOrders() on controller SkiService.Controllers.ServiceController (SkiService).
2023-11-21 19:17:38.107 +01:00 [INF] Executing action method SkiService.Controllers.ServiceController.GetServiceOrders (SkiService) - Validation state: "Valid"
2023-11-21 19:17:38.183 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT `s`.`OrderID`, COALESCE(`e`.`Name`, 'N/A') AS `EmployeeName`, `c`.`Name` AS `CustomerName`, `c`.`Email` AS `CustomerEmail`, `c`.`Phone` AS `CustomerPhone`, `s0`.`ServiceType`, `p`.`Priority`, `s1`.`Status`, `s`.`CreationDate`, `s`.`StartDate`, `s`.`CompletionDate`, COALESCE(`s`.`Comment`, 'Kein Kommentar') AS `Comment`, `s`.`Sum`
FROM `ServiceOrders` AS `s`
LEFT JOIN `Employees` AS `e` ON `s`.`EmployeeID` = `e`.`ID`
INNER JOIN `Customers` AS `c` ON `s`.`CustomerID` = `c`.`ID`
LEFT JOIN `Services` AS `s0` ON `s`.`ServiceType` = `s0`.`ID`
LEFT JOIN `Priorities` AS `p` ON `s`.`Priority` = `p`.`ID`
LEFT JOIN `Statuses` AS `s1` ON `s`.`Status` = `s1`.`ID`
2023-11-21 19:17:38.183 +01:00 [INF] Erfolgreich alle Auftr√§ge erhalten.
2023-11-21 19:17:38.184 +01:00 [INF] Executed action method SkiService.Controllers.ServiceController.GetServiceOrders (SkiService), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 75.9521ms.
2023-11-21 19:17:38.184 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[SkiService.Models.dto.GetServiceOrderDto, SkiService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-11-21 19:17:38.184 +01:00 [INF] Executed action SkiService.Controllers.ServiceController.GetServiceOrders (SkiService) in 98.9989ms
2023-11-21 19:17:38.184 +01:00 [INF] Executed endpoint 'SkiService.Controllers.ServiceController.GetServiceOrders (SkiService)'
2023-11-21 19:17:38.185 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/api/service application/json - - 200 - application/json;+charset=utf-8 104.4245ms
2023-11-21 19:18:59.948 +01:00 [INF] User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-11-21 19:19:00.162 +01:00 [INF] Now listening on: https://localhost:7214
2023-11-21 19:19:00.162 +01:00 [INF] Now listening on: http://localhost:5271
2023-11-21 19:19:00.164 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-11-21 19:19:00.164 +01:00 [INF] Hosting environment: Development
2023-11-21 19:19:00.164 +01:00 [INF] Content root path: C:\GitHub\Modul295\SkiServiceProject\SkiService
2023-11-21 19:19:00.618 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/swagger/index.html - -
2023-11-21 19:19:00.823 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/swagger/index.html - - - 200 - text/html;charset=utf-8 205.9445ms
2023-11-21 19:19:00.835 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_vs/browserLink - -
2023-11-21 19:19:00.835 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - -
2023-11-21 19:19:00.858 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - - - 200 12352 application/javascript;+charset=utf-8 22.4098ms
2023-11-21 19:19:00.869 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 33.9594ms
2023-11-21 19:19:00.957 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/swagger/v1/swagger.json - -
2023-11-21 19:19:01.085 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 128.6515ms
2023-11-21 19:19:05.769 +01:00 [INF] Request starting HTTP/1.1 GET https://localhost:7214/api/Service/priority/Tief - -
2023-11-21 19:19:05.869 +01:00 [INF] Executing endpoint 'SkiService.Controllers.ServiceController.GetServiceOrdersByPriority (SkiService)'
2023-11-21 19:19:05.885 +01:00 [INF] Route matched with {action = "GetServiceOrdersByPriority", controller = "Service"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[SkiService.Models.dto.GetServiceOrderDto]]] GetServiceOrdersByPriority(System.String) on controller SkiService.Controllers.ServiceController (SkiService).
2023-11-21 19:19:06.219 +01:00 [INF] Executing action method SkiService.Controllers.ServiceController.GetServiceOrdersByPriority (SkiService) - Validation state: "Valid"
2023-11-21 19:19:07.371 +01:00 [INF] Executed DbCommand (53ms) [Parameters=[@__priority_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`ID`, `p`.`Priority`
FROM `Priorities` AS `p`
WHERE `p`.`Priority` = @__priority_0
LIMIT 2
2023-11-21 19:19:07.571 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@__priorityRecord_ID_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `s`.`OrderID`, `s`.`Comment`, `s`.`CompletionDate`, `s`.`CreationDate`, `s`.`CustomerID`, `s`.`EmployeeID`, `s`.`Priority`, `s`.`ServiceType`, `s`.`StartDate`, `s`.`Status`, `s`.`Sum`, `e`.`ID`, `e`.`IsLocked`, `e`.`LoginAttempts`, `e`.`Name`, `e`.`Password`, `e`.`Username`, `c`.`ID`, `c`.`Email`, `c`.`Name`, `c`.`Phone`, `p`.`ID`, `p`.`Priority`, `s0`.`ID`, `s0`.`Status`, `s1`.`ID`, `s1`.`ServiceType`
FROM `ServiceOrders` AS `s`
LEFT JOIN `Employees` AS `e` ON `s`.`EmployeeID` = `e`.`ID`
INNER JOIN `Customers` AS `c` ON `s`.`CustomerID` = `c`.`ID`
LEFT JOIN `Priorities` AS `p` ON `s`.`Priority` = `p`.`ID`
LEFT JOIN `Statuses` AS `s0` ON `s`.`Status` = `s0`.`ID`
LEFT JOIN `Services` AS `s1` ON `s`.`ServiceType` = `s1`.`ID`
WHERE `s`.`Priority` = @__priorityRecord_ID_0
2023-11-21 19:19:07.572 +01:00 [INF] Erfolgreich die gew√ºnschten Auftr√§ge erhalten.
2023-11-21 19:19:07.578 +01:00 [INF] Executed action method SkiService.Controllers.ServiceController.GetServiceOrdersByPriority (SkiService), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1352.738ms.
2023-11-21 19:19:07.584 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[SkiService.Models.dto.GetServiceOrderDto, SkiService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-11-21 19:19:07.606 +01:00 [INF] Executed action SkiService.Controllers.ServiceController.GetServiceOrdersByPriority (SkiService) in 1717.2786ms
2023-11-21 19:19:07.608 +01:00 [INF] Executed endpoint 'SkiService.Controllers.ServiceController.GetServiceOrdersByPriority (SkiService)'
2023-11-21 19:19:07.617 +01:00 [INF] Request finished HTTP/1.1 GET https://localhost:7214/api/Service/priority/Tief - - - 200 - application/json;+charset=utf-8 1848.2408ms
2023-11-21 19:19:14.207 +01:00 [INF] Request starting HTTP/1.1 GET https://localhost:7214/api/Service/priority/Standard - -
2023-11-21 19:19:14.212 +01:00 [INF] Executing endpoint 'SkiService.Controllers.ServiceController.GetServiceOrdersByPriority (SkiService)'
2023-11-21 19:19:14.212 +01:00 [INF] Route matched with {action = "GetServiceOrdersByPriority", controller = "Service"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[SkiService.Models.dto.GetServiceOrderDto]]] GetServiceOrdersByPriority(System.String) on controller SkiService.Controllers.ServiceController (SkiService).
2023-11-21 19:19:14.253 +01:00 [INF] Executing action method SkiService.Controllers.ServiceController.GetServiceOrdersByPriority (SkiService) - Validation state: "Valid"
2023-11-21 19:19:14.285 +01:00 [INF] Executed DbCommand (7ms) [Parameters=[@__priority_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`ID`, `p`.`Priority`
FROM `Priorities` AS `p`
WHERE `p`.`Priority` = @__priority_0
LIMIT 2
2023-11-21 19:19:14.292 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__priorityRecord_ID_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `s`.`OrderID`, `s`.`Comment`, `s`.`CompletionDate`, `s`.`CreationDate`, `s`.`CustomerID`, `s`.`EmployeeID`, `s`.`Priority`, `s`.`ServiceType`, `s`.`StartDate`, `s`.`Status`, `s`.`Sum`, `e`.`ID`, `e`.`IsLocked`, `e`.`LoginAttempts`, `e`.`Name`, `e`.`Password`, `e`.`Username`, `c`.`ID`, `c`.`Email`, `c`.`Name`, `c`.`Phone`, `p`.`ID`, `p`.`Priority`, `s0`.`ID`, `s0`.`Status`, `s1`.`ID`, `s1`.`ServiceType`
FROM `ServiceOrders` AS `s`
LEFT JOIN `Employees` AS `e` ON `s`.`EmployeeID` = `e`.`ID`
INNER JOIN `Customers` AS `c` ON `s`.`CustomerID` = `c`.`ID`
LEFT JOIN `Priorities` AS `p` ON `s`.`Priority` = `p`.`ID`
LEFT JOIN `Statuses` AS `s0` ON `s`.`Status` = `s0`.`ID`
LEFT JOIN `Services` AS `s1` ON `s`.`ServiceType` = `s1`.`ID`
WHERE `s`.`Priority` = @__priorityRecord_ID_0
2023-11-21 19:19:14.379 +01:00 [INF] Erfolgreich die gew√ºnschten Auftr√§ge erhalten.
2023-11-21 19:19:14.380 +01:00 [INF] Executed action method SkiService.Controllers.ServiceController.GetServiceOrdersByPriority (SkiService), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 126.3287ms.
2023-11-21 19:19:14.380 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[SkiService.Models.dto.GetServiceOrderDto, SkiService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-11-21 19:19:14.387 +01:00 [INF] Executed action SkiService.Controllers.ServiceController.GetServiceOrdersByPriority (SkiService) in 174.3653ms
2023-11-21 19:19:14.387 +01:00 [INF] Executed endpoint 'SkiService.Controllers.ServiceController.GetServiceOrdersByPriority (SkiService)'
2023-11-21 19:19:14.387 +01:00 [INF] Request finished HTTP/1.1 GET https://localhost:7214/api/Service/priority/Standard - - - 200 - application/json;+charset=utf-8 180.1257ms
2023-11-21 19:19:18.637 +01:00 [INF] Request starting HTTP/1.1 GET https://localhost:7214/api/Service/priority/standard - -
2023-11-21 19:19:18.640 +01:00 [INF] Executing endpoint 'SkiService.Controllers.ServiceController.GetServiceOrdersByPriority (SkiService)'
2023-11-21 19:19:18.640 +01:00 [INF] Route matched with {action = "GetServiceOrdersByPriority", controller = "Service"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[SkiService.Models.dto.GetServiceOrderDto]]] GetServiceOrdersByPriority(System.String) on controller SkiService.Controllers.ServiceController (SkiService).
2023-11-21 19:19:18.668 +01:00 [INF] Executing action method SkiService.Controllers.ServiceController.GetServiceOrdersByPriority (SkiService) - Validation state: "Valid"
2023-11-21 19:19:18.737 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__priority_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`ID`, `p`.`Priority`
FROM `Priorities` AS `p`
WHERE `p`.`Priority` = @__priority_0
LIMIT 2
2023-11-21 19:19:18.741 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__priorityRecord_ID_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `s`.`OrderID`, `s`.`Comment`, `s`.`CompletionDate`, `s`.`CreationDate`, `s`.`CustomerID`, `s`.`EmployeeID`, `s`.`Priority`, `s`.`ServiceType`, `s`.`StartDate`, `s`.`Status`, `s`.`Sum`, `e`.`ID`, `e`.`IsLocked`, `e`.`LoginAttempts`, `e`.`Name`, `e`.`Password`, `e`.`Username`, `c`.`ID`, `c`.`Email`, `c`.`Name`, `c`.`Phone`, `p`.`ID`, `p`.`Priority`, `s0`.`ID`, `s0`.`Status`, `s1`.`ID`, `s1`.`ServiceType`
FROM `ServiceOrders` AS `s`
LEFT JOIN `Employees` AS `e` ON `s`.`EmployeeID` = `e`.`ID`
INNER JOIN `Customers` AS `c` ON `s`.`CustomerID` = `c`.`ID`
LEFT JOIN `Priorities` AS `p` ON `s`.`Priority` = `p`.`ID`
LEFT JOIN `Statuses` AS `s0` ON `s`.`Status` = `s0`.`ID`
LEFT JOIN `Services` AS `s1` ON `s`.`ServiceType` = `s1`.`ID`
WHERE `s`.`Priority` = @__priorityRecord_ID_0
2023-11-21 19:19:18.742 +01:00 [INF] Erfolgreich die gew√ºnschten Auftr√§ge erhalten.
2023-11-21 19:19:18.742 +01:00 [INF] Executed action method SkiService.Controllers.ServiceController.GetServiceOrdersByPriority (SkiService), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 73.9002ms.
2023-11-21 19:19:18.742 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[SkiService.Models.dto.GetServiceOrderDto, SkiService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-11-21 19:19:18.743 +01:00 [INF] Executed action SkiService.Controllers.ServiceController.GetServiceOrdersByPriority (SkiService) in 102.0729ms
2023-11-21 19:19:18.743 +01:00 [INF] Executed endpoint 'SkiService.Controllers.ServiceController.GetServiceOrdersByPriority (SkiService)'
2023-11-21 19:19:18.743 +01:00 [INF] Request finished HTTP/1.1 GET https://localhost:7214/api/Service/priority/standard - - - 200 - application/json;+charset=utf-8 105.6193ms
2023-11-21 19:19:25.609 +01:00 [INF] Request starting HTTP/1.1 GET https://localhost:7214/api/Service/priority/express - -
2023-11-21 19:19:25.609 +01:00 [INF] Executing endpoint 'SkiService.Controllers.ServiceController.GetServiceOrdersByPriority (SkiService)'
2023-11-21 19:19:25.610 +01:00 [INF] Route matched with {action = "GetServiceOrdersByPriority", controller = "Service"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[SkiService.Models.dto.GetServiceOrderDto]]] GetServiceOrdersByPriority(System.String) on controller SkiService.Controllers.ServiceController (SkiService).
2023-11-21 19:19:25.637 +01:00 [INF] Executing action method SkiService.Controllers.ServiceController.GetServiceOrdersByPriority (SkiService) - Validation state: "Valid"
2023-11-21 19:19:25.643 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__priority_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`ID`, `p`.`Priority`
FROM `Priorities` AS `p`
WHERE `p`.`Priority` = @__priority_0
LIMIT 2
2023-11-21 19:19:25.647 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__priorityRecord_ID_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `s`.`OrderID`, `s`.`Comment`, `s`.`CompletionDate`, `s`.`CreationDate`, `s`.`CustomerID`, `s`.`EmployeeID`, `s`.`Priority`, `s`.`ServiceType`, `s`.`StartDate`, `s`.`Status`, `s`.`Sum`, `e`.`ID`, `e`.`IsLocked`, `e`.`LoginAttempts`, `e`.`Name`, `e`.`Password`, `e`.`Username`, `c`.`ID`, `c`.`Email`, `c`.`Name`, `c`.`Phone`, `p`.`ID`, `p`.`Priority`, `s0`.`ID`, `s0`.`Status`, `s1`.`ID`, `s1`.`ServiceType`
FROM `ServiceOrders` AS `s`
LEFT JOIN `Employees` AS `e` ON `s`.`EmployeeID` = `e`.`ID`
INNER JOIN `Customers` AS `c` ON `s`.`CustomerID` = `c`.`ID`
LEFT JOIN `Priorities` AS `p` ON `s`.`Priority` = `p`.`ID`
LEFT JOIN `Statuses` AS `s0` ON `s`.`Status` = `s0`.`ID`
LEFT JOIN `Services` AS `s1` ON `s`.`ServiceType` = `s1`.`ID`
WHERE `s`.`Priority` = @__priorityRecord_ID_0
2023-11-21 19:19:25.648 +01:00 [INF] Erfolgreich die gew√ºnschten Auftr√§ge erhalten.
2023-11-21 19:19:25.648 +01:00 [INF] Executed action method SkiService.Controllers.ServiceController.GetServiceOrdersByPriority (SkiService), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 10.5301ms.
2023-11-21 19:19:25.648 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[SkiService.Models.dto.GetServiceOrderDto, SkiService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-11-21 19:19:25.648 +01:00 [INF] Executed action SkiService.Controllers.ServiceController.GetServiceOrdersByPriority (SkiService) in 38.7674ms
2023-11-21 19:19:25.649 +01:00 [INF] Executed endpoint 'SkiService.Controllers.ServiceController.GetServiceOrdersByPriority (SkiService)'
2023-11-21 19:19:25.649 +01:00 [INF] Request finished HTTP/1.1 GET https://localhost:7214/api/Service/priority/express - - - 200 - application/json;+charset=utf-8 40.5267ms
2023-11-21 19:19:41.911 +01:00 [INF] Request starting HTTP/1.1 GET https://localhost:7214/api/Service/priority/standard - -
2023-11-21 19:19:41.912 +01:00 [INF] Executing endpoint 'SkiService.Controllers.ServiceController.GetServiceOrdersByPriority (SkiService)'
2023-11-21 19:19:41.912 +01:00 [INF] Route matched with {action = "GetServiceOrdersByPriority", controller = "Service"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[SkiService.Models.dto.GetServiceOrderDto]]] GetServiceOrdersByPriority(System.String) on controller SkiService.Controllers.ServiceController (SkiService).
2023-11-21 19:19:41.925 +01:00 [INF] Executing action method SkiService.Controllers.ServiceController.GetServiceOrdersByPriority (SkiService) - Validation state: "Valid"
2023-11-21 19:19:41.931 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__priority_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`ID`, `p`.`Priority`
FROM `Priorities` AS `p`
WHERE `p`.`Priority` = @__priority_0
LIMIT 2
2023-11-21 19:19:41.934 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__priorityRecord_ID_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `s`.`OrderID`, `s`.`Comment`, `s`.`CompletionDate`, `s`.`CreationDate`, `s`.`CustomerID`, `s`.`EmployeeID`, `s`.`Priority`, `s`.`ServiceType`, `s`.`StartDate`, `s`.`Status`, `s`.`Sum`, `e`.`ID`, `e`.`IsLocked`, `e`.`LoginAttempts`, `e`.`Name`, `e`.`Password`, `e`.`Username`, `c`.`ID`, `c`.`Email`, `c`.`Name`, `c`.`Phone`, `p`.`ID`, `p`.`Priority`, `s0`.`ID`, `s0`.`Status`, `s1`.`ID`, `s1`.`ServiceType`
FROM `ServiceOrders` AS `s`
LEFT JOIN `Employees` AS `e` ON `s`.`EmployeeID` = `e`.`ID`
INNER JOIN `Customers` AS `c` ON `s`.`CustomerID` = `c`.`ID`
LEFT JOIN `Priorities` AS `p` ON `s`.`Priority` = `p`.`ID`
LEFT JOIN `Statuses` AS `s0` ON `s`.`Status` = `s0`.`ID`
LEFT JOIN `Services` AS `s1` ON `s`.`ServiceType` = `s1`.`ID`
WHERE `s`.`Priority` = @__priorityRecord_ID_0
2023-11-21 19:19:41.934 +01:00 [INF] Erfolgreich die gew√ºnschten Auftr√§ge erhalten.
2023-11-21 19:19:41.934 +01:00 [INF] Executed action method SkiService.Controllers.ServiceController.GetServiceOrdersByPriority (SkiService), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 9.5075ms.
2023-11-21 19:19:41.934 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[SkiService.Models.dto.GetServiceOrderDto, SkiService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-11-21 19:19:41.935 +01:00 [INF] Executed action SkiService.Controllers.ServiceController.GetServiceOrdersByPriority (SkiService) in 22.8874ms
2023-11-21 19:19:41.935 +01:00 [INF] Executed endpoint 'SkiService.Controllers.ServiceController.GetServiceOrdersByPriority (SkiService)'
2023-11-21 19:19:41.935 +01:00 [INF] Request finished HTTP/1.1 GET https://localhost:7214/api/Service/priority/standard - - - 200 - application/json;+charset=utf-8 23.5500ms
2023-11-21 19:19:47.407 +01:00 [INF] Request starting HTTP/1.1 PATCH https://localhost:7214/api/Service/delete/1 - 0
2023-11-21 19:19:47.416 +01:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-11-21 19:19:47.424 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-11-21 19:19:47.425 +01:00 [INF] Request finished HTTP/1.1 PATCH https://localhost:7214/api/Service/delete/1 - 0 - 401 0 - 17.2700ms
2023-11-21 19:19:50.303 +01:00 [INF] Request starting HTTP/1.1 PATCH https://localhost:7214/api/Service/delete/10 - 0
2023-11-21 19:19:50.305 +01:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-11-21 19:19:50.306 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-11-21 19:19:50.306 +01:00 [INF] Request finished HTTP/1.1 PATCH https://localhost:7214/api/Service/delete/10 - 0 - 401 0 - 4.1654ms
2023-11-21 19:19:52.041 +01:00 [INF] Request starting HTTP/1.1 PATCH https://localhost:7214/api/Service/delete/16 - 0
2023-11-21 19:19:52.045 +01:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-11-21 19:19:52.045 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-11-21 19:19:52.045 +01:00 [INF] Request finished HTTP/1.1 PATCH https://localhost:7214/api/Service/delete/16 - 0 - 401 0 - 4.2288ms
2023-11-21 19:19:53.150 +01:00 [INF] Request starting HTTP/1.1 PATCH https://localhost:7214/api/Service/delete/6 - 0
2023-11-21 19:19:53.150 +01:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-11-21 19:19:53.150 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-11-21 19:19:53.151 +01:00 [INF] Request finished HTTP/1.1 PATCH https://localhost:7214/api/Service/delete/6 - 0 - 401 0 - 0.9144ms
2023-11-21 19:20:10.231 +01:00 [INF] Request starting HTTP/1.1 GET https://localhost:7214/api/Service - -
2023-11-21 19:20:10.232 +01:00 [INF] Executing endpoint 'SkiService.Controllers.ServiceController.GetServiceOrders (SkiService)'
2023-11-21 19:20:10.237 +01:00 [INF] Route matched with {action = "GetServiceOrders", controller = "Service"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[SkiService.Models.dto.GetServiceOrderDto]]] GetServiceOrders() on controller SkiService.Controllers.ServiceController (SkiService).
2023-11-21 19:20:10.257 +01:00 [INF] Executing action method SkiService.Controllers.ServiceController.GetServiceOrders (SkiService) - Validation state: "Valid"
2023-11-21 19:20:10.295 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT `s`.`OrderID`, COALESCE(`e`.`Name`, 'N/A') AS `EmployeeName`, `c`.`Name` AS `CustomerName`, `c`.`Email` AS `CustomerEmail`, `c`.`Phone` AS `CustomerPhone`, `s0`.`ServiceType`, `p`.`Priority`, `s1`.`Status`, `s`.`CreationDate`, `s`.`StartDate`, `s`.`CompletionDate`, COALESCE(`s`.`Comment`, 'Kein Kommentar') AS `Comment`, `s`.`Sum`
FROM `ServiceOrders` AS `s`
LEFT JOIN `Employees` AS `e` ON `s`.`EmployeeID` = `e`.`ID`
INNER JOIN `Customers` AS `c` ON `s`.`CustomerID` = `c`.`ID`
LEFT JOIN `Services` AS `s0` ON `s`.`ServiceType` = `s0`.`ID`
LEFT JOIN `Priorities` AS `p` ON `s`.`Priority` = `p`.`ID`
LEFT JOIN `Statuses` AS `s1` ON `s`.`Status` = `s1`.`ID`
2023-11-21 19:20:10.296 +01:00 [INF] Erfolgreich alle Auftr√§ge erhalten.
2023-11-21 19:20:10.296 +01:00 [INF] Executed action method SkiService.Controllers.ServiceController.GetServiceOrders (SkiService), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 38.6175ms.
2023-11-21 19:20:10.296 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[SkiService.Models.dto.GetServiceOrderDto, SkiService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-11-21 19:20:10.296 +01:00 [INF] Executed action SkiService.Controllers.ServiceController.GetServiceOrders (SkiService) in 58.7294ms
2023-11-21 19:20:10.296 +01:00 [INF] Executed endpoint 'SkiService.Controllers.ServiceController.GetServiceOrders (SkiService)'
2023-11-21 19:20:10.296 +01:00 [INF] Request finished HTTP/1.1 GET https://localhost:7214/api/Service - - - 200 - application/json;+charset=utf-8 64.5817ms
2023-11-21 19:20:21.781 +01:00 [INF] Request starting HTTP/1.1 POST https://localhost:7214/api/Service application/json 286
2023-11-21 19:20:21.781 +01:00 [INF] Executing endpoint 'SkiService.Controllers.ServiceController.PostServiceOrder (SkiService)'
2023-11-21 19:20:21.786 +01:00 [INF] Route matched with {action = "PostServiceOrder", controller = "Service"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] PostServiceOrder(SkiService.Models.dto.CreateServiceOrderDto) on controller SkiService.Controllers.ServiceController (SkiService).
2023-11-21 19:20:21.842 +01:00 [INF] Executing action method SkiService.Controllers.ServiceController.PostServiceOrder (SkiService) - Validation state: "Valid"
2023-11-21 19:20:21.859 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__customerDto_Email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT `c`.`ID`, `c`.`Email`, `c`.`Name`, `c`.`Phone`
FROM `Customers` AS `c`
WHERE `c`.`Email` = @__customerDto_Email_0
LIMIT 2
2023-11-21 19:20:21.997 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO `Customers` (`Email`, `Name`, `Phone`)
VALUES (@p0, @p1, @p2);
SELECT `ID`
FROM `Customers`
WHERE ROW_COUNT() = 1 AND `ID` = LAST_INSERT_ID();
2023-11-21 19:20:22.036 +01:00 [INF] Kunde Franz Meier erfolgreich erstellt.
2023-11-21 19:20:22.044 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__checkPriorityDto_Priority_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`ID`, `p`.`Priority`
FROM `Priorities` AS `p`
WHERE `p`.`Priority` = @__checkPriorityDto_Priority_0
LIMIT 2
2023-11-21 19:20:22.055 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__checkServiceTypeDto_ServiceType_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT `s`.`ID`, `s`.`ServiceType`
FROM `Services` AS `s`
WHERE `s`.`ServiceType` = @__checkServiceTypeDto_ServiceType_0
LIMIT 2
2023-11-21 19:20:22.092 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime), @p2='?' (DbType = DateTime), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = DateTime), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO `ServiceOrders` (`Comment`, `CompletionDate`, `CreationDate`, `CustomerID`, `EmployeeID`, `Priority`, `ServiceType`, `StartDate`, `Status`, `Sum`)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
SELECT `OrderID`
FROM `ServiceOrders`
WHERE ROW_COUNT() = 1 AND `OrderID` = LAST_INSERT_ID();
2023-11-21 19:20:22.104 +01:00 [INF] Ein Auftrag wurde erfolgreich erstellt.
2023-11-21 19:20:22.105 +01:00 [INF] Executed action method SkiService.Controllers.ServiceController.PostServiceOrder (SkiService), returned result Microsoft.AspNetCore.Mvc.StatusCodeResult in 262.7185ms.
2023-11-21 19:20:22.109 +01:00 [INF] Executing StatusCodeResult, setting HTTP status code 201
2023-11-21 19:20:22.109 +01:00 [INF] Executed action SkiService.Controllers.ServiceController.PostServiceOrder (SkiService) in 322.8313ms
2023-11-21 19:20:22.109 +01:00 [INF] Executed endpoint 'SkiService.Controllers.ServiceController.PostServiceOrder (SkiService)'
2023-11-21 19:20:22.109 +01:00 [INF] Request finished HTTP/1.1 POST https://localhost:7214/api/Service application/json 286 - 201 0 - 328.2925ms
2023-11-21 19:20:34.162 +01:00 [INF] Request starting HTTP/1.1 POST https://localhost:7214/api/Auth/login application/json 60
2023-11-21 19:20:34.163 +01:00 [INF] Executing endpoint 'SkiService.Controllers.AuthController.Login (SkiService)'
2023-11-21 19:20:34.164 +01:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult`1[System.String] Login(SkiService.Models.dto.LoginDto) on controller SkiService.Controllers.AuthController (SkiService).
2023-11-21 19:20:34.191 +01:00 [INF] Executing action method SkiService.Controllers.AuthController.Login (SkiService) - Validation state: "Valid"
2023-11-21 19:20:34.206 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__loginDto_Username_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT `e`.`ID`, `e`.`IsLocked`, `e`.`LoginAttempts`, `e`.`Name`, `e`.`Password`, `e`.`Username`
FROM `Employees` AS `e`
WHERE `e`.`Username` = @__loginDto_Username_0
LIMIT 1
2023-11-21 19:20:34.276 +01:00 [INF] Executed action method SkiService.Controllers.AuthController.Login (SkiService), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 84.8357ms.
2023-11-21 19:20:34.276 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2023-11-21 19:20:34.277 +01:00 [INF] Executed action SkiService.Controllers.AuthController.Login (SkiService) in 112.8779ms
2023-11-21 19:20:34.277 +01:00 [INF] Executed endpoint 'SkiService.Controllers.AuthController.Login (SkiService)'
2023-11-21 19:20:34.277 +01:00 [INF] Request finished HTTP/1.1 POST https://localhost:7214/api/Auth/login application/json 60 - 200 - text/plain;+charset=utf-8 114.5437ms
2023-11-21 19:41:01.048 +01:00 [INF] User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-11-21 19:41:01.398 +01:00 [INF] Now listening on: https://localhost:7214
2023-11-21 19:41:01.399 +01:00 [INF] Now listening on: http://localhost:5271
2023-11-21 19:41:01.400 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-11-21 19:41:01.401 +01:00 [INF] Hosting environment: Development
2023-11-21 19:41:01.401 +01:00 [INF] Content root path: C:\GitHub\Modul295\SkiServiceProject\SkiService
2023-11-21 19:41:02.125 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/swagger/index.html - -
2023-11-21 19:41:02.356 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/swagger/index.html - - - 200 - text/html;charset=utf-8 237.0786ms
2023-11-21 19:41:02.366 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_vs/browserLink - -
2023-11-21 19:41:02.366 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - -
2023-11-21 19:41:02.397 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - - - 200 12352 application/javascript;+charset=utf-8 31.7175ms
2023-11-21 19:41:02.417 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 51.3751ms
2023-11-21 19:41:02.538 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/swagger/v1/swagger.json - -
2023-11-21 19:41:02.713 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 174.3385ms
2023-11-21 19:41:05.020 +01:00 [INF] Request starting HTTP/1.1 PATCH https://localhost:7214/api/Service/delete/1 - 0
2023-11-21 19:41:05.311 +01:00 [INF] Executing endpoint 'SkiService.Controllers.ServiceController.SetServiceOrderStatusToDelete (SkiService)'
2023-11-21 19:41:05.332 +01:00 [INF] Route matched with {action = "SetServiceOrderStatusToDelete", controller = "Service"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SetServiceOrderStatusToDelete(Int32) on controller SkiService.Controllers.ServiceController (SkiService).
2023-11-21 19:41:05.891 +01:00 [INF] Executing action method SkiService.Controllers.ServiceController.SetServiceOrderStatusToDelete (SkiService) - Validation state: "Valid"
2023-11-21 19:41:06.644 +01:00 [INF] Executed DbCommand (30ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `s`.`OrderID`, `s`.`Comment`, `s`.`CompletionDate`, `s`.`CreationDate`, `s`.`CustomerID`, `s`.`EmployeeID`, `s`.`Priority`, `s`.`ServiceType`, `s`.`StartDate`, `s`.`Status`, `s`.`Sum`
FROM `ServiceOrders` AS `s`
WHERE `s`.`OrderID` = @__p_0
LIMIT 1
2023-11-21 19:41:06.727 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT `s`.`ID`, `s`.`Status`
FROM `Statuses` AS `s`
WHERE `s`.`Status` = 'Gel√∂scht'
LIMIT 2
2023-11-21 19:41:06.812 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET AUTOCOMMIT = 1;
UPDATE `ServiceOrders` SET `Status` = @p0
WHERE `OrderID` = @p1;
SELECT ROW_COUNT();
2023-11-21 19:41:06.820 +01:00 [INF] Erfolgreich den Status des Auftrags mit der ID 1 auf 'Gel√∂scht' aktualisiert.
2023-11-21 19:41:06.823 +01:00 [INF] Executed action method SkiService.Controllers.ServiceController.SetServiceOrderStatusToDelete (SkiService), returned result Microsoft.AspNetCore.Mvc.OkResult in 928.1824ms.
2023-11-21 19:41:06.827 +01:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2023-11-21 19:41:06.829 +01:00 [INF] Executed action SkiService.Controllers.ServiceController.SetServiceOrderStatusToDelete (SkiService) in 1494.5563ms
2023-11-21 19:41:06.830 +01:00 [INF] Executed endpoint 'SkiService.Controllers.ServiceController.SetServiceOrderStatusToDelete (SkiService)'
2023-11-21 19:41:06.837 +01:00 [INF] Request finished HTTP/1.1 PATCH https://localhost:7214/api/Service/delete/1 - 0 - 200 0 - 1816.8543ms
2023-11-21 19:41:38.285 +01:00 [INF] Request starting HTTP/1.1 PATCH https://localhost:7214/api/Service/delete/1 - 0
2023-11-21 19:41:38.296 +01:00 [INF] Executing endpoint 'SkiService.Controllers.ServiceController.SetServiceOrderStatusToDelete (SkiService)'
2023-11-21 19:41:38.296 +01:00 [INF] Route matched with {action = "SetServiceOrderStatusToDelete", controller = "Service"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SetServiceOrderStatusToDelete(Int32) on controller SkiService.Controllers.ServiceController (SkiService).
2023-11-21 19:41:38.365 +01:00 [INF] Executing action method SkiService.Controllers.ServiceController.SetServiceOrderStatusToDelete (SkiService) - Validation state: "Valid"
2023-11-21 19:41:38.503 +01:00 [INF] Executed DbCommand (20ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `s`.`OrderID`, `s`.`Comment`, `s`.`CompletionDate`, `s`.`CreationDate`, `s`.`CustomerID`, `s`.`EmployeeID`, `s`.`Priority`, `s`.`ServiceType`, `s`.`StartDate`, `s`.`Status`, `s`.`Sum`
FROM `ServiceOrders` AS `s`
WHERE `s`.`OrderID` = @__p_0
LIMIT 1
2023-11-21 19:41:38.508 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT `s`.`ID`, `s`.`Status`
FROM `Statuses` AS `s`
WHERE `s`.`Status` = 'Gel√∂scht'
LIMIT 2
2023-11-21 19:41:38.523 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET AUTOCOMMIT = 1;
UPDATE `ServiceOrders` SET `Status` = @p0
WHERE `OrderID` = @p1;
SELECT ROW_COUNT();
2023-11-21 19:41:38.524 +01:00 [INF] Erfolgreich den Status des Auftrags mit der ID 1 auf 'Gel√∂scht' aktualisiert.
2023-11-21 19:41:38.525 +01:00 [INF] Executed action method SkiService.Controllers.ServiceController.SetServiceOrderStatusToDelete (SkiService), returned result Microsoft.AspNetCore.Mvc.OkResult in 159.8407ms.
2023-11-21 19:41:38.526 +01:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2023-11-21 19:41:38.527 +01:00 [INF] Executed action SkiService.Controllers.ServiceController.SetServiceOrderStatusToDelete (SkiService) in 229.967ms
2023-11-21 19:41:38.527 +01:00 [INF] Executed endpoint 'SkiService.Controllers.ServiceController.SetServiceOrderStatusToDelete (SkiService)'
2023-11-21 19:41:38.528 +01:00 [INF] Request finished HTTP/1.1 PATCH https://localhost:7214/api/Service/delete/1 - 0 - 200 0 - 242.7788ms
2023-11-21 19:42:02.550 +01:00 [INF] Request starting HTTP/1.1 PATCH https://localhost:7214/api/Service/update/3 application/json 35
2023-11-21 19:42:02.571 +01:00 [INF] Executing endpoint 'SkiService.Controllers.ServiceController.UpdateServiceOrderStatus (SkiService)'
2023-11-21 19:42:02.580 +01:00 [INF] Route matched with {action = "UpdateServiceOrderStatus", controller = "Service"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrderStatus(Int32, SkiService.Models.dto.UpdateStatusDto) on controller SkiService.Controllers.ServiceController (SkiService).
2023-11-21 19:42:02.646 +01:00 [INF] Executing action method SkiService.Controllers.ServiceController.UpdateServiceOrderStatus (SkiService) - Validation state: "Valid"
2023-11-21 19:42:02.689 +01:00 [INF] Executed DbCommand (15ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `s`.`OrderID`, `s`.`Comment`, `s`.`CompletionDate`, `s`.`CreationDate`, `s`.`CustomerID`, `s`.`EmployeeID`, `s`.`Priority`, `s`.`ServiceType`, `s`.`StartDate`, `s`.`Status`, `s`.`Sum`
FROM `ServiceOrders` AS `s`
WHERE `s`.`OrderID` = @__p_0
LIMIT 1
2023-11-21 19:42:02.705 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__updateStatusDto_Status_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT `s`.`ID`, `s`.`Status`
FROM `Statuses` AS `s`
WHERE `s`.`Status` = @__updateStatusDto_Status_0
LIMIT 2
2023-11-21 19:42:02.723 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@p10='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime), @p2='?' (DbType = DateTime), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = DateTime), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET AUTOCOMMIT = 1;
UPDATE `ServiceOrders` SET `Comment` = @p0, `CompletionDate` = @p1, `CreationDate` = @p2, `CustomerID` = @p3, `EmployeeID` = @p4, `Priority` = @p5, `ServiceType` = @p6, `StartDate` = @p7, `Status` = @p8, `Sum` = @p9
WHERE `OrderID` = @p10;
SELECT ROW_COUNT();
2023-11-21 19:42:02.724 +01:00 [INF] Erfolgreich den Status des Auftrags mit der ID 3 aktualisiert.
2023-11-21 19:42:02.724 +01:00 [INF] Executed action method SkiService.Controllers.ServiceController.UpdateServiceOrderStatus (SkiService), returned result Microsoft.AspNetCore.Mvc.OkResult in 77.5482ms.
2023-11-21 19:42:02.724 +01:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2023-11-21 19:42:02.724 +01:00 [INF] Executed action SkiService.Controllers.ServiceController.UpdateServiceOrderStatus (SkiService) in 143.9238ms
2023-11-21 19:42:02.724 +01:00 [INF] Executed endpoint 'SkiService.Controllers.ServiceController.UpdateServiceOrderStatus (SkiService)'
2023-11-21 19:42:02.725 +01:00 [INF] Request finished HTTP/1.1 PATCH https://localhost:7214/api/Service/update/3 application/json 35 - 200 0 - 175.2153ms
2023-11-21 19:42:16.426 +01:00 [INF] Request starting HTTP/1.1 PATCH https://localhost:7214/api/Service/update/1 application/json 35
2023-11-21 19:42:16.427 +01:00 [INF] Executing endpoint 'SkiService.Controllers.ServiceController.UpdateServiceOrderStatus (SkiService)'
2023-11-21 19:42:16.427 +01:00 [INF] Route matched with {action = "UpdateServiceOrderStatus", controller = "Service"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrderStatus(Int32, SkiService.Models.dto.UpdateStatusDto) on controller SkiService.Controllers.ServiceController (SkiService).
2023-11-21 19:42:16.452 +01:00 [INF] Executing action method SkiService.Controllers.ServiceController.UpdateServiceOrderStatus (SkiService) - Validation state: "Valid"
2023-11-21 19:42:16.459 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `s`.`OrderID`, `s`.`Comment`, `s`.`CompletionDate`, `s`.`CreationDate`, `s`.`CustomerID`, `s`.`EmployeeID`, `s`.`Priority`, `s`.`ServiceType`, `s`.`StartDate`, `s`.`Status`, `s`.`Sum`
FROM `ServiceOrders` AS `s`
WHERE `s`.`OrderID` = @__p_0
LIMIT 1
2023-11-21 19:42:16.478 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__updateStatusDto_Status_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT `s`.`ID`, `s`.`Status`
FROM `Statuses` AS `s`
WHERE `s`.`Status` = @__updateStatusDto_Status_0
LIMIT 2
2023-11-21 19:42:16.486 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@p10='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime), @p2='?' (DbType = DateTime), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = DateTime), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET AUTOCOMMIT = 1;
UPDATE `ServiceOrders` SET `Comment` = @p0, `CompletionDate` = @p1, `CreationDate` = @p2, `CustomerID` = @p3, `EmployeeID` = @p4, `Priority` = @p5, `ServiceType` = @p6, `StartDate` = @p7, `Status` = @p8, `Sum` = @p9
WHERE `OrderID` = @p10;
SELECT ROW_COUNT();
2023-11-21 19:42:16.486 +01:00 [INF] Erfolgreich den Status des Auftrags mit der ID 1 aktualisiert.
2023-11-21 19:42:16.486 +01:00 [INF] Executed action method SkiService.Controllers.ServiceController.UpdateServiceOrderStatus (SkiService), returned result Microsoft.AspNetCore.Mvc.OkResult in 33.8891ms.
2023-11-21 19:42:16.486 +01:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2023-11-21 19:42:16.487 +01:00 [INF] Executed action SkiService.Controllers.ServiceController.UpdateServiceOrderStatus (SkiService) in 59.6687ms
2023-11-21 19:42:16.487 +01:00 [INF] Executed endpoint 'SkiService.Controllers.ServiceController.UpdateServiceOrderStatus (SkiService)'
2023-11-21 19:42:16.487 +01:00 [INF] Request finished HTTP/1.1 PATCH https://localhost:7214/api/Service/update/1 application/json 35 - 200 0 - 60.7838ms
2023-11-21 19:42:47.483 +01:00 [INF] Request starting HTTP/1.1 PATCH https://localhost:7214/api/Service/update/4 application/json 35
2023-11-21 19:42:47.484 +01:00 [INF] Executing endpoint 'SkiService.Controllers.ServiceController.UpdateServiceOrderStatus (SkiService)'
2023-11-21 19:42:47.484 +01:00 [INF] Route matched with {action = "UpdateServiceOrderStatus", controller = "Service"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrderStatus(Int32, SkiService.Models.dto.UpdateStatusDto) on controller SkiService.Controllers.ServiceController (SkiService).
2023-11-21 19:42:47.530 +01:00 [INF] Executing action method SkiService.Controllers.ServiceController.UpdateServiceOrderStatus (SkiService) - Validation state: "Valid"
2023-11-21 19:42:47.541 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `s`.`OrderID`, `s`.`Comment`, `s`.`CompletionDate`, `s`.`CreationDate`, `s`.`CustomerID`, `s`.`EmployeeID`, `s`.`Priority`, `s`.`ServiceType`, `s`.`StartDate`, `s`.`Status`, `s`.`Sum`
FROM `ServiceOrders` AS `s`
WHERE `s`.`OrderID` = @__p_0
LIMIT 1
2023-11-21 19:42:47.563 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__updateStatusDto_Status_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT `s`.`ID`, `s`.`Status`
FROM `Statuses` AS `s`
WHERE `s`.`Status` = @__updateStatusDto_Status_0
LIMIT 2
2023-11-21 19:42:47.573 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@p10='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime), @p2='?' (DbType = DateTime), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = DateTime), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET AUTOCOMMIT = 1;
UPDATE `ServiceOrders` SET `Comment` = @p0, `CompletionDate` = @p1, `CreationDate` = @p2, `CustomerID` = @p3, `EmployeeID` = @p4, `Priority` = @p5, `ServiceType` = @p6, `StartDate` = @p7, `Status` = @p8, `Sum` = @p9
WHERE `OrderID` = @p10;
SELECT ROW_COUNT();
2023-11-21 19:42:47.573 +01:00 [INF] Erfolgreich den Status des Auftrags mit der ID 4 aktualisiert.
2023-11-21 19:42:47.573 +01:00 [INF] Executed action method SkiService.Controllers.ServiceController.UpdateServiceOrderStatus (SkiService), returned result Microsoft.AspNetCore.Mvc.OkResult in 43.5271ms.
2023-11-21 19:42:47.574 +01:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2023-11-21 19:42:47.574 +01:00 [INF] Executed action SkiService.Controllers.ServiceController.UpdateServiceOrderStatus (SkiService) in 89.558ms
2023-11-21 19:42:47.574 +01:00 [INF] Executed endpoint 'SkiService.Controllers.ServiceController.UpdateServiceOrderStatus (SkiService)'
2023-11-21 19:42:47.574 +01:00 [INF] Request finished HTTP/1.1 PATCH https://localhost:7214/api/Service/update/4 application/json 35 - 200 0 - 92.4182ms
2023-11-21 19:43:11.921 +01:00 [INF] Request starting HTTP/1.1 PATCH https://localhost:7214/api/Service/update/5 application/json 35
2023-11-21 19:43:11.933 +01:00 [INF] Executing endpoint 'SkiService.Controllers.ServiceController.UpdateServiceOrderStatus (SkiService)'
2023-11-21 19:43:11.933 +01:00 [INF] Route matched with {action = "UpdateServiceOrderStatus", controller = "Service"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrderStatus(Int32, SkiService.Models.dto.UpdateStatusDto) on controller SkiService.Controllers.ServiceController (SkiService).
2023-11-21 19:43:11.968 +01:00 [INF] Executing action method SkiService.Controllers.ServiceController.UpdateServiceOrderStatus (SkiService) - Validation state: "Valid"
2023-11-21 19:43:11.991 +01:00 [INF] Executed DbCommand (18ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `s`.`OrderID`, `s`.`Comment`, `s`.`CompletionDate`, `s`.`CreationDate`, `s`.`CustomerID`, `s`.`EmployeeID`, `s`.`Priority`, `s`.`ServiceType`, `s`.`StartDate`, `s`.`Status`, `s`.`Sum`
FROM `ServiceOrders` AS `s`
WHERE `s`.`OrderID` = @__p_0
LIMIT 1
2023-11-21 19:43:11.996 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__updateStatusDto_Status_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT `s`.`ID`, `s`.`Status`
FROM `Statuses` AS `s`
WHERE `s`.`Status` = @__updateStatusDto_Status_0
LIMIT 2
2023-11-21 19:43:12.003 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@p10='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime), @p2='?' (DbType = DateTime), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = DateTime), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET AUTOCOMMIT = 1;
UPDATE `ServiceOrders` SET `Comment` = @p0, `CompletionDate` = @p1, `CreationDate` = @p2, `CustomerID` = @p3, `EmployeeID` = @p4, `Priority` = @p5, `ServiceType` = @p6, `StartDate` = @p7, `Status` = @p8, `Sum` = @p9
WHERE `OrderID` = @p10;
SELECT ROW_COUNT();
2023-11-21 19:43:12.004 +01:00 [INF] Erfolgreich den Status des Auftrags mit der ID 5 aktualisiert.
2023-11-21 19:43:12.004 +01:00 [INF] Executed action method SkiService.Controllers.ServiceController.UpdateServiceOrderStatus (SkiService), returned result Microsoft.AspNetCore.Mvc.OkResult in 35.6575ms.
2023-11-21 19:43:12.004 +01:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2023-11-21 19:43:12.004 +01:00 [INF] Executed action SkiService.Controllers.ServiceController.UpdateServiceOrderStatus (SkiService) in 70.9295ms
2023-11-21 19:43:12.004 +01:00 [INF] Executed endpoint 'SkiService.Controllers.ServiceController.UpdateServiceOrderStatus (SkiService)'
2023-11-21 19:43:12.005 +01:00 [INF] Request finished HTTP/1.1 PATCH https://localhost:7214/api/Service/update/5 application/json 35 - 200 0 - 84.0563ms
2023-11-21 19:43:32.785 +01:00 [INF] Request starting HTTP/1.1 PATCH https://localhost:7214/api/Service/assign/1 application/json 33
2023-11-21 19:43:32.787 +01:00 [INF] Executing endpoint 'SkiService.Controllers.ServiceController.AssignOrderToEmployee (SkiService)'
2023-11-21 19:43:32.807 +01:00 [INF] Route matched with {action = "AssignOrderToEmployee", controller = "Service"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignOrderToEmployee(Int32, SkiService.Models.dto.AssignOrderDto) on controller SkiService.Controllers.ServiceController (SkiService).
2023-11-21 19:43:32.849 +01:00 [INF] Executing action method SkiService.Controllers.ServiceController.AssignOrderToEmployee (SkiService) - Validation state: "Valid"
2023-11-21 19:43:32.858 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `s`.`OrderID`, `s`.`Comment`, `s`.`CompletionDate`, `s`.`CreationDate`, `s`.`CustomerID`, `s`.`EmployeeID`, `s`.`Priority`, `s`.`ServiceType`, `s`.`StartDate`, `s`.`Status`, `s`.`Sum`
FROM `ServiceOrders` AS `s`
WHERE `s`.`OrderID` = @__p_0
LIMIT 1
2023-11-21 19:43:32.908 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@__assignOrderDto_Username_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT `e`.`ID`, `e`.`IsLocked`, `e`.`LoginAttempts`, `e`.`Name`, `e`.`Password`, `e`.`Username`
FROM `Employees` AS `e`
WHERE `e`.`Username` = @__assignOrderDto_Username_0
LIMIT 1
2023-11-21 19:43:32.945 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@p10='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime), @p2='?' (DbType = DateTime), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = DateTime), @p8='?' (DbType = Int32), @p9='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET AUTOCOMMIT = 1;
UPDATE `ServiceOrders` SET `Comment` = @p0, `CompletionDate` = @p1, `CreationDate` = @p2, `CustomerID` = @p3, `EmployeeID` = @p4, `Priority` = @p5, `ServiceType` = @p6, `StartDate` = @p7, `Status` = @p8, `Sum` = @p9
WHERE `OrderID` = @p10;
SELECT ROW_COUNT();
2023-11-21 19:43:32.946 +01:00 [INF] Erfolgreich den Mitarbeiter Anna Schmidt dem Auftrag 1 zugewiesen.
2023-11-21 19:43:32.946 +01:00 [INF] Executed action method SkiService.Controllers.ServiceController.AssignOrderToEmployee (SkiService), returned result Microsoft.AspNetCore.Mvc.OkResult in 97.1154ms.
2023-11-21 19:43:32.946 +01:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2023-11-21 19:43:32.946 +01:00 [INF] Executed action SkiService.Controllers.ServiceController.AssignOrderToEmployee (SkiService) in 139.5638ms
2023-11-21 19:43:32.947 +01:00 [INF] Executed endpoint 'SkiService.Controllers.ServiceController.AssignOrderToEmployee (SkiService)'
2023-11-21 19:43:32.947 +01:00 [INF] Request finished HTTP/1.1 PATCH https://localhost:7214/api/Service/assign/1 application/json 33 - 200 0 - 162.1096ms
2023-11-21 20:45:10.841 +01:00 [INF] User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-11-21 20:45:11.160 +01:00 [INF] Now listening on: https://localhost:7214
2023-11-21 20:45:11.161 +01:00 [INF] Now listening on: http://localhost:5271
2023-11-21 20:45:11.162 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-11-21 20:45:11.163 +01:00 [INF] Hosting environment: Development
2023-11-21 20:45:11.163 +01:00 [INF] Content root path: C:\GitHub\Modul295\SkiServiceProject\SkiService
2023-11-21 20:45:12.063 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/swagger/index.html - -
2023-11-21 20:45:12.377 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/swagger/index.html - - - 200 - text/html;charset=utf-8 315.8999ms
2023-11-21 20:45:12.382 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - -
2023-11-21 20:45:12.387 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/_vs/browserLink - -
2023-11-21 20:45:12.408 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_framework/aspnetcore-browser-refresh.js - - - 200 12352 application/javascript;+charset=utf-8 26.1466ms
2023-11-21 20:45:12.431 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 44.4475ms
2023-11-21 20:45:12.570 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/swagger/v1/swagger.json - -
2023-11-21 20:45:12.804 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 234.3724ms
2023-11-21 20:45:40.729 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/api/Service - -
2023-11-21 20:45:41.101 +01:00 [INF] Executing endpoint 'SkiService.Controllers.ServiceController.GetServiceOrders (SkiService)'
2023-11-21 20:45:41.186 +01:00 [INF] Route matched with {action = "GetServiceOrders", controller = "Service"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[SkiService.Models.dto.GetServiceOrderDto]]] GetServiceOrders() on controller SkiService.Controllers.ServiceController (SkiService).
2023-11-21 20:45:42.099 +01:00 [INF] Executing action method SkiService.Controllers.ServiceController.GetServiceOrders (SkiService) - Validation state: "Valid"
2023-11-21 20:45:44.654 +01:00 [INF] Executed DbCommand (52ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT `s`.`OrderID`, COALESCE(`e`.`Name`, 'N/A') AS `EmployeeName`, `c`.`Name` AS `CustomerName`, `c`.`Email` AS `CustomerEmail`, `c`.`Phone` AS `CustomerPhone`, `s0`.`ServiceType`, `p`.`Priority`, `s1`.`Status`, `s`.`CreationDate`, `s`.`StartDate`, `s`.`CompletionDate`, COALESCE(`s`.`Comment`, 'Kein Kommentar') AS `Comment`, `s`.`Sum`
FROM `ServiceOrders` AS `s`
LEFT JOIN `Employees` AS `e` ON `s`.`EmployeeID` = `e`.`ID`
INNER JOIN `Customers` AS `c` ON `s`.`CustomerID` = `c`.`ID`
LEFT JOIN `Services` AS `s0` ON `s`.`ServiceType` = `s0`.`ID`
LEFT JOIN `Priorities` AS `p` ON `s`.`Priority` = `p`.`ID`
LEFT JOIN `Statuses` AS `s1` ON `s`.`Status` = `s1`.`ID`
2023-11-21 20:45:44.701 +01:00 [INF] Erfolgreich alle Auftr√§ge erhalten.
2023-11-21 20:45:44.710 +01:00 [INF] Executed action method SkiService.Controllers.ServiceController.GetServiceOrders (SkiService), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2601.5073ms.
2023-11-21 20:45:44.728 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[SkiService.Models.dto.GetServiceOrderDto, SkiService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-11-21 20:45:44.776 +01:00 [INF] Executed action SkiService.Controllers.ServiceController.GetServiceOrders (SkiService) in 3582.1408ms
2023-11-21 20:45:44.777 +01:00 [INF] Executed endpoint 'SkiService.Controllers.ServiceController.GetServiceOrders (SkiService)'
2023-11-21 20:45:44.794 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/api/Service - - - 200 - application/json;+charset=utf-8 4065.3969ms
2023-11-21 20:45:56.278 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7214/api/Service/priority/tief - -
2023-11-21 20:45:56.285 +01:00 [INF] Executing endpoint 'SkiService.Controllers.ServiceController.GetServiceOrdersByPriority (SkiService)'
2023-11-21 20:45:56.319 +01:00 [INF] Route matched with {action = "GetServiceOrdersByPriority", controller = "Service"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[SkiService.Models.dto.GetServiceOrderDto]]] GetServiceOrdersByPriority(System.String) on controller SkiService.Controllers.ServiceController (SkiService).
2023-11-21 20:45:56.422 +01:00 [INF] Executing action method SkiService.Controllers.ServiceController.GetServiceOrdersByPriority (SkiService) - Validation state: "Valid"
2023-11-21 20:45:56.705 +01:00 [INF] Executed DbCommand (116ms) [Parameters=[@__priority_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT `p`.`ID`, `p`.`Priority`
FROM `Priorities` AS `p`
WHERE `p`.`Priority` = @__priority_0
LIMIT 2
2023-11-21 20:45:56.955 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@__priorityRecord_ID_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `s`.`OrderID`, `s`.`Comment`, `s`.`CompletionDate`, `s`.`CreationDate`, `s`.`CustomerID`, `s`.`EmployeeID`, `s`.`Priority`, `s`.`ServiceType`, `s`.`StartDate`, `s`.`Status`, `s`.`Sum`, `e`.`ID`, `e`.`IsLocked`, `e`.`LoginAttempts`, `e`.`Name`, `e`.`Password`, `e`.`Username`, `c`.`ID`, `c`.`Email`, `c`.`Name`, `c`.`Phone`, `p`.`ID`, `p`.`Priority`, `s0`.`ID`, `s0`.`Status`, `s1`.`ID`, `s1`.`ServiceType`
FROM `ServiceOrders` AS `s`
LEFT JOIN `Employees` AS `e` ON `s`.`EmployeeID` = `e`.`ID`
INNER JOIN `Customers` AS `c` ON `s`.`CustomerID` = `c`.`ID`
LEFT JOIN `Priorities` AS `p` ON `s`.`Priority` = `p`.`ID`
LEFT JOIN `Statuses` AS `s0` ON `s`.`Status` = `s0`.`ID`
LEFT JOIN `Services` AS `s1` ON `s`.`ServiceType` = `s1`.`ID`
WHERE `s`.`Priority` = @__priorityRecord_ID_0
2023-11-21 20:45:57.150 +01:00 [INF] Erfolgreich die gew√ºnschten Auftr√§ge erhalten.
2023-11-21 20:45:57.151 +01:00 [INF] Executed action method SkiService.Controllers.ServiceController.GetServiceOrdersByPriority (SkiService), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 728.1752ms.
2023-11-21 20:45:57.152 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[SkiService.Models.dto.GetServiceOrderDto, SkiService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-11-21 20:45:57.153 +01:00 [INF] Executed action SkiService.Controllers.ServiceController.GetServiceOrdersByPriority (SkiService) in 833.8131ms
2023-11-21 20:45:57.154 +01:00 [INF] Executed endpoint 'SkiService.Controllers.ServiceController.GetServiceOrdersByPriority (SkiService)'
2023-11-21 20:45:57.156 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7214/api/Service/priority/tief - - - 200 - application/json;+charset=utf-8 877.1664ms
